{"version":3,"sources":["utils/constant.js","asset/images/staehutt.png","components/locking/navbar/navbar.js","components/locking/navbar/sidebars.js","components/locking/navbar/NavigationBar.js","asset/images/logo.png","components/locking/info/info.js","components/locking/banner/banner.js","components/locking/banner2/bannerendplan.js","components/locking/myaccount/myaccount.js","components/locking/sponsors/footer.png","components/locking/sponsors/sponsor.js","asset/images/pdf.pdf","components/locking/footer/footer.js","contaner/Index.js","asset/images/blk1.png","asset/images/Golden.png","asset/images/giff.gif","asset/images/detail.png","asset/images/gfx.png","contaner/Home.js","components/withoutlocking/info/info.js","components/withoutlocking/banner/banner.js","components/withoutlocking/banner2/bannerendplan.js","components/withoutlocking/myaccount/myaccount.js","components/withoutlocking/sponsors/footer.png","components/withoutlocking/sponsors/sponsor.js","components/withoutlocking/footer/footer.js","contaner/IndexWithout.js","App.js","reportWebVitals.js","index.js"],"names":["tokenAddres","tokenAbi","contractAddress","refDefaultAddress","abi","Navbarr","accountAd","useState","account","setAccount","loadWeb3","a","isConnected","window","ethereum","web3","Web3","enable","currentProvider","console","log","getAccounts","accounts","on","getContractTransferEventsByUser","eth","newArr","result","contract","Contract","getPastEvents","fromBlock","toBlock","error","events","forEach","element","returnValues","_buyer","nature","_tokens","_amounts","push","utils","fromWei","then","slice","useEffect","setInterval","className","href","src","logo1","alt","class","width","height","id","onClick","history","useHistory","onSelect","selected","style","position","backgroundColor","Toggle","Nav","defaultSelected","eventKey","fontSize","document","getElementById","scrollIntoView","styled","div","Info","contractBalance","setcontractBalance","setTotalUsers","getData","tokenContract","methods","balanceOf","call","accountDetails","total_users","target","bg","text","Banner","disable","setDisable","disable1","setDisable1","disable2","setDisable2","upline","dailyProfit1","totalReturn1","withdrawnAble1","set1withdrawAble","enterAmount1","set1EnterAmount","days1","dailyProfit2","totalReturn2","withdrawnAble2","set2withdrawAble","enterAmount2","set2EnterAmount","days2","dailyProfit3","totalReturn3","withdrawnAble3","set3withdrawAble","enterAmount3","set3EnterAmount","days3","DepositPlan3","e","RemainingTokens","ActualRemainingTokens","parseInt","toast","allowance","Accountinfo","approve","toWei","send","from","output","success","catch","message","DepositPlan2","DepositPlan1","Invest","name","invest","enter1AmountCall","finalAmount","parseFloat","value","valueEntered","getResult","check_reward","formatThousands","profit","enter2AmountCall","enter3AmountCall","num","values","toFixed","toString","split","replace","length","placeholder","type","onChange","disabled","BannerEndPlan","Myaccount","WithdrawAbleReward","setWithdrawAbleReward","userstaked","setuserstaked","getUserAvailable","uplinereward","getUserTotalDeposits","WithdrawReward","withdraw","color","location","protocol","host","select","execCommand","focus","padding","Sponsor","footer","Footer","Pdf","Index","Home","params","particles","line_linked","number","size","display","flexDirection","justifyContent","margin","gfx","blk","blk13","blk14","totalusers","set1dailyProfit","set1TotalReturn","withdrawn1","set1withdrawn","set2dailyProfit","set2TotalReturn","withdrawn2","set2withdrawn","set3dailyProfit","set3TotalReturn","withdrawn3","set3withdrawn","Users","users","lockableDays","allocation","dailyprofit1","daily","dailyprofit2","dailyprofit3","checkReward","Rewards","setuplineearn","referralReward","SetReferralReward","numberodreferral","setnumberodreferral","withdrawamount","setwithdrawamount","Total_Upline_Earned","totalupline","upline_Reward","DepositeToken","referrals","enterAmountCall","IndexWithout","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.22ce6f0c.chunk.js","sourcesContent":["// export const i = 0;\n\n// // export const contractAddress = \"TAE21Qxf7QhN663YrMxFp5d74DQgrFeRgs\";\n\n// export const contractAddress = \"0x6b162002c760fA582c3eDa037239D9feb5336225\";\n// export const refDefaultAddress = \"0x4113ccD05D440f9580d55B2B34C92d6cC82eAB3c\";\n// export const abi = [{ \"inputs\": [{ \"internalType\": \"contract IBEP20\", \"name\": \"_Token\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"user\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"card\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"time\", \"type\": \"uint256\" }], \"name\": \"BetAmount\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"previousOwner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"newOwner\", \"type\": \"address\" }], \"name\": \"OwnershipTransferred\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"address\", \"name\": \"user\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"time\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"card\", \"type\": \"uint256\" }], \"name\": \"Withdraw\", \"type\": \"event\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"Bet_Amount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"cards\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"cardprice\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"Token\", \"outputs\": [{ \"internalType\": \"contract IBEP20\", \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"_owner\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"name\": \"card_probability\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"SMSAmount\", \"type\": \"uint256\" }], \"name\": \"emergencyWithdraw\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"Amount\", \"type\": \"uint256\" }], \"name\": \"emergencyWithdrawBNB\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"name\": \"number_of_deposit\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"owner\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"newOwner\", \"type\": \"address\" }], \"name\": \"transferOwnership\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"name\": \"user\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"id\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"Card_No\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"time\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"_card_Price\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"deposit_id\", \"type\": \"uint256\" }], \"name\": \"withdraw\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }]\n\n\n// export const tokenAddres = \"0xEe241738B4642eccA0A59A11b90283383810A297\";\n// export const tokenAbi = [{ \"constant\": true, \"inputs\": [], \"name\": \"name\", \"outputs\": [{ \"name\": \"\", \"type\": \"string\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"spender\", \"type\": \"address\" }, { \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"approve\", \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"sender\", \"type\": \"address\" }, { \"name\": \"recipient\", \"type\": \"address\" }, { \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"transferFrom\", \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint8\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"spender\", \"type\": \"address\" }, { \"name\": \"addedValue\", \"type\": \"uint256\" }], \"name\": \"increaseAllowance\", \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_value\", \"type\": \"uint256\" }], \"name\": \"burn\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"name\": \"account\", \"type\": \"address\" }], \"name\": \"balanceOf\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"symbol\", \"outputs\": [{ \"name\": \"\", \"type\": \"string\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"spender\", \"type\": \"address\" }, { \"name\": \"subtractedValue\", \"type\": \"uint256\" }], \"name\": \"decreaseAllowance\", \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"recipient\", \"type\": \"address\" }, { \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"transfer\", \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"name\": \"owner\", \"type\": \"address\" }, { \"name\": \"spender\", \"type\": \"address\" }], \"name\": \"allowance\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"Approval\", \"type\": \"event\" }]\n\nexport const i = 0;\n\n// export const contractAddress = \"TAE21Qxf7QhN663YrMxFp5d74DQgrFeRgs\";\n\nexport const tokenAddres = \"0xEe241738B4642eccA0A59A11b90283383810A297\";\nexport const tokenAbi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\n\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},\n{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\n\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\n\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}\n,{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[\n    {\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\n    \"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\"\n    ,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\n    \"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\n    \"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\n    \"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\n    \"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\n    \"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\n    \"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},\n    {\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\n    \"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\n    \"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\n    \"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\n    \"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]\n\nexport const contractAddress = \"0xa809AD45DeA3BbCb26a828738261012039C00B06\";\nexport const refDefaultAddress = \"0x4374616068BC726efBD64c01D5C26b970fB3A40e\";\nexport const abi = [{\"inputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"wallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"FeePayed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"plan\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"percent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"finish\",\"type\":\"uint256\"}],\"name\":\"NewDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Newbie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefBonus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INVEST_MIN_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTS_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENT_STEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROJECT_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"REFERRAL_PERCENTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIME_STEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commissionWallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"plan\",\"type\":\"uint8\"}],\"name\":\"getPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"plan\",\"type\":\"uint8\"}],\"name\":\"getPlanInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percent\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"plan\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"}],\"name\":\"getResult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"percent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finish\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserAmountOfDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserCheckpoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getUserDepositInfo\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"plan\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"percent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finish\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserDividends\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserDownlineCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserReferralBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserReferralTotalBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserReferralWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserReferrer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserTotalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"plan\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_numberOfToken\",\"type\":\"uint256\"}],\"name\":\"invest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startUNIX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRefBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDrawFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\n","export default __webpack_public_path__ + \"static/media/staehutt.e8182646.png\";","import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport {\n    contractAddress, tokenAbi, tokenAddres, abi\n\n} from \"../../../utils/constant\";\nimport './navbar.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n// import logo from \"../../asset/images/logo.png\";\nimport logo1 from \"../../../asset/images/staehutt.png\";\n\nimport menuIcon from \"../../../asset/images/menuIcon.png\";\nfunction Navbarr() {\n\n    let accountAd;\n    const [account, setAccount] = useState(\"Connect\");\n    const [showLinks, setShowLinks] = useState(false);\n    const contractAddresses = \"0x1B3B7610D9e86e31499e43726AF25E0347CfdD92\";\n    const abi = [{ \"inputs\": [{ \"internalType\": \"contract IBEP20\", \"name\": \"_Token\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"user\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"card\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"time\", \"type\": \"uint256\" }], \"name\": \"BetAmount\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"previousOwner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"newOwner\", \"type\": \"address\" }], \"name\": \"OwnershipTransferred\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"address\", \"name\": \"user\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"time\", \"type\": \"uint256\" }], \"name\": \"Withdraw\", \"type\": \"event\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"Bet_Amount\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"Token\", \"outputs\": [{ \"internalType\": \"contract IBEP20\", \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"_owner\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"SMSAmount\", \"type\": \"uint256\" }], \"name\": \"emergencyWithdraw\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"Amount\", \"type\": \"uint256\" }], \"name\": \"emergencyWithdrawBNB\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"name\": \"number_of_deposit\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"owner\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"newOwner\", \"type\": \"address\" }], \"name\": \"transferOwnership\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"name\": \"user\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"id\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"Card_No\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"time\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"_card_Price\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"BetNo\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"uint256[]\", \"name\": \"deposit_id\", \"type\": \"uint256[]\" }], \"name\": \"withdraw\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }]\n\n    function formatThousands(num) {\n        var numbr = parseFloat(parseFloat(num).toFixed(6));\n        // console.log(\"num\", parseFloat(numbr));\n        var values = numbr.toString().split(\".\");\n        return (\n            values[0].replace(/.(?=(?:.{3})+$)/g, \"$&,\") +\n            (values.length == 2 ? \".\" + values[1] : \"\")\n        );\n    }\n\n    const loadWeb3 = async () => {\n        let isConnected = false;\n        try {\n            if (window.ethereum) {\n                window.web3 = new Web3(window.ethereum);\n                await window.ethereum.enable();\n                isConnected = true;\n            } else if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n                isConnected = true;\n            } else {\n                isConnected = false;\n                console.log(\"Metamask is not installed, please install it on your browser to connect.\");\n                // alert(\"Metamask is not installed, please install it on your browser to connect.\");\n            }\n            if (isConnected === true) {\n                let accounts = await getAccounts();\n                // setAccount(accounts[0]);\n                accountAd = accounts[0];\n                setAccount(accountAd);\n                let accountDetails = null;\n                window.ethereum.on(\"accountsChanged\", function (accounts) {\n                    // setAccount(accounts[0]);\n                    accountAd = accounts[0];\n                    setAccount(accountAd);\n                    // console.log(accounts);\n                });\n            }\n            getContractTransferEventsByUser();\n        } catch (error) {\n            console.log(\"Error while connecting metamask\", error);\n            // alert(\"Error while connecting metamask\");\n        }\n    };\n\n    const getAccounts = async () => {\n        const web3 = window.web3;\n        try {\n            let accounts = await web3.eth.getAccounts();\n            // console.log(accounts);\n            return accounts;\n        } catch (error) {\n            console.log(\"Error while fetching acounts: \", error);\n            return null;\n        }\n    };\n\n    // eslint-disable-next-line\n    const isLockedAccount = async () => {\n        try {\n            let accounts = await getAccounts();\n            if (accounts.length > 0) {\n                // console.log(\"Metamask is unlocked\");\n            } else {\n                console.log(\"Metamask is locked\");\n            }\n        } catch (error) {\n            console.log(\"Error while checking locked account\");\n        }\n    };\n    const getContractTransferEventsByUser = async () => {\n        let newArr = [];\n        let newArrSell = [];\n        let newArrWithdraw = [];\n        let result = [];\n        // const web3 = window.web3;\n        const web3 = new Web3('https://data-seed-prebsc-1-s1.binance.org:8545');\n        let contract = new web3.eth.Contract(abi, contractAddresses);\n        try {\n            let continueToken = \"\";\n            var instructorEvent = await contract.getPastEvents('BetAmount', {\n                fromBlock: 12644314,\n                toBlock: 12645914\n            }, function (error, events) {\n                if (events) {\n                    events.forEach((element) => {\n                        // console.log(\"Sell\", web3.eth.get_block('latest'));\n                        // console.log(\"Sell\", accountAd);\n                        if (element?.returnValues?._buyer === accountAd) {\n                            let nature = element?.returnValues?.nature;\n                            let _buyer = element?.returnValues?._buyer\n                            let _tokens = element?.returnValues?._tokens;\n                            let _amounts = element?.returnValues._amounts;\n\n                            newArr.push({\n                                nature: nature,\n                                _buyer: _buyer,\n                                _tokens: web3.utils.fromWei(_tokens),\n                                _amounts: web3.utils.fromWei(_amounts),\n                            });\n                            // console.log(\"newArr\", newArr)\n                        }\n                    });\n                }\n            }).then(function (events) {\n                // console.log(\"getPastEvents\", events)\n            });\n\n\n\n            let itemssell = newArr.slice(0, 5);\n            //   setRowsSell([...itemssell]);\n        } catch (error) {\n            console.error(\"getEvents\", error);\n        } finally {\n            return result;\n        }\n    };\n    const handleClick = async () => {\n        const web3 = window.web3;\n        // let value = 100;\n        try {\n            console.log(account)\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            let tokenContract = new web3.eth.Contract(tokenAbi, tokenAddres);\n            // if (value >= 100 && value <= 1000) {\n            await tokenContract.methods.approve(contractAddress, web3.utils.toWei(\"\" + 100)).send({ from: accountAd })\n            const result = await contract.methods.Bet_Amount(web3.utils.toWei(\"\" + 100)).send({ from: accountAd })\n            console.log(result);\n            // } else {\n            //     alert('Minimum Bet 100 and Maximum Bet 1000')\n            // }\n        } catch (error) {\n            console.log(\"Error while fetching acounts: \", error);\n\n        }\n    }\n    useEffect(() => {\n        setInterval(() => {\n            loadWeb3();\n        }, 1000);\n    }, []);\n\n    return (\n\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-sm-2\">\n                    <span href=\"#home\">\n                        <img className=\"logo\" src={logo1} alt=\"Logo\" class={{width: \"75px\", height: \"75px\" }}/>\n                    </span>\n                </div>\n                <div className=\"col-sm-3 offset-sm-6 connect\">\n                    <a href=\"#\"\n                        className=\"btn btn-warning btn-sm\"\n                        aria-pressed=\"true\"\n                        id=\"connect\"\n                        onClick={loadWeb3}\n                    >\n                        {/* connect */}\n                        {account}\n                    </a>\n                </div>\n            </div>\n        </div >\n    );\n}\nexport default Navbarr;\n","\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nfunction Navbarr() {\n\n    let history = useHistory();\n\n    function home() {\n        history.push(\"/\");\n    }\n    function locking() {\n        history.push(\"/locking\");\n    }\n    function withoutlocking() {\n        history.push(\"/without\");\n    }\n    function help() {\n        // history.push(\"/\");\n        try {\n            document.getElementById('contacts').scrollIntoView();\n            // window.open(\"https://arbitech-solutions.business.site/\", '_blank');\n            // window.open(\"https://arbitech-solutions.business.site/\")\n        } catch (error) {\n            console.log(\"Error while connecting metamask\", error);\n            // alert(\"Error while connecting metamask\");\n        }\n    }\n    return (\n        <SideNav\n            onSelect={(selected) => {\n                // Add your code here\n            }}\n            style={{\n                position: \"fixed\",\n                backgroundColor: \"#222\",\n            }} >\n            <SideNav.Toggle />\n            <SideNav.Nav defaultSelected=\"home\">\n                <NavItem eventKey=\"home\" onClick={home}>\n                    <NavIcon>\n                        <i className=\"fa fa-fw fa-home\" style={{ fontSize: '1.75em' }} />\n                    </NavIcon>\n                    <NavText >\n                        {/* <li>\n                            <Link to=\"/\"> */}\n                        Home\n                        {/* </Link>\n                        </li> */}\n                    </NavText>\n                </NavItem>\n                {/* <NavItem eventKey=\"Locking\" onClick={withoutlocking}>\n                    <NavIcon>\n                        <i className=\"fas fa-lock-alt\" style={{ fontSize: '1.75em' }} />\n                    </NavIcon>\n                    <NavText>\n                        Locking\n                    </NavText>\n                </NavItem> */}\n                <NavItem eventKey=\"withoutLocking\" onClick={locking}>\n                    <NavIcon>\n                        <i className=\"fas fa-lock-open-alt\" style={{ fontSize: '1.75em' }} />\n                    </NavIcon>\n                    <NavText>\n                        {/* <li>\n                            <Link to=\"/without\"> */}\n                        Without Locking\n                        {/* </Link>\n                        </li> */}\n                    </NavText>\n                </NavItem>\n                <NavItem eventKey=\"help\" onClick={help}>\n                    <NavIcon>\n                        {/* <i className=\"fa fa-fw fa-home\" style={{ fontSize: '1.75em' }} /> */}\n                        <i class=\"far fa-question-circle\" style={{ fontSize: '1.9em' }} />\n                    </NavIcon>\n                    <NavText >\n                        {/* <li>\n                            <Link to=\"/\"> */}\n                        Help\n                        {/* </Link>\n                        </li> */}\n                    </NavText>\n                </NavItem>\n            </SideNav.Nav>\n        </SideNav>\n\n    );\n}\nexport default Navbarr;\n\n\n\n\n","import React from 'react';\nimport { Nav, Navbar, Form, FormControl } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n  .navbar { background-color: #222; }\n  a, .navbar-nav, .navbar-light .nav-link {\n    color: #9FFFCB;\n    &:hover { color: white; }\n  }\n  .navbar-brand {\n    font-size: 1.4em;\n    color: #9FFFCB;\n    &:hover { color: white; }\n  }\n  .form-center {\n    position: absolute !important;\n    left: 25%;\n    right: 25%;\n  }\n`;\n\nexport const NavigationBar = () => (\n  <Styles>\n    <Navbar expand=\"lg\">\n      <Navbar.Brand href=\"/\">Tutorial</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n      <Form className=\"form-center\">\n        <FormControl type=\"text\" placeholder=\"Search\" className=\"\" />\n      </Form>\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <Nav.Item><Nav.Link href=\"/\">Home</Nav.Link></Nav.Item> \n          <Nav.Item><Nav.Link href=\"/about\">About</Nav.Link></Nav.Item>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  </Styles>\n)","export default __webpack_public_path__ + \"static/media/logo.df2f1df8.png\";","import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport {\n    contractAddress,\n    abi,\n    tokenAddres,\n    tokenAbi\n} from \"../../../utils/constant\";\nimport './info.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\n// import logo from \"../../asset/images/logo.png\";\nimport logo from \"../../../asset/images/logo.png\";\nimport menuIcon from \"../../../asset/images/menuIcon.png\";\nimport { Container } from \"react-bootstrap\";\nimport Badge from 'react-bootstrap/Button';\nfunction Info() {\n\n    let accountAd;\n    const [account, setAccount] = useState(\"Connect\");\n    const [showLinks, setShowLinks] = useState(false);\n    const [dailyProfit, setdailyProfit] = useState(0);\n    const [totalReturn, setTotalReturn] = useState(0);\n    const [withdrawTime, setWithdrawTime] = useState(0);\n    const [enterAmount, setEnterAmount] = useState(0);\n    const [fourteenDaysReward, setfourteenDaysReward] = useState(0);\n    const [days, setdays] = useState(0);\n    const [contractBalance, setcontractBalance] = useState(0);\n    const [totalusers, setTotalUsers] = useState(0);\n\n    const getData = async () => {\n        try {\n            const web3 = window.web3;\n            let tokenContract = new web3.eth.Contract(tokenAbi, tokenAddres);\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            // console.log(\"data\", web3);\n            let accountDetails = await tokenContract.methods.balanceOf(contractAddress).call();\n            setcontractBalance(web3.utils.fromWei(accountDetails));\n            // total_users\n            let total_users = await contract.methods.total_users().call();\n            // console.log(\"total_users\", total_users);\n            setTotalUsers(total_users);\n        } catch (error) {\n            // console.log(\"data\", error);\n            // alert(\"Error while checking locked account\");\n        }\n    };\n    function formatThousands(num) {\n        var numbr = parseFloat(parseFloat(num).toFixed(6));\n        // console.log(\"num\", parseFloat(numbr));\n        var values = numbr.toString().split(\".\");\n        return (\n            values[0].replace(/.(?=(?:.{3})+$)/g, \"$&,\") +\n            (values.length == 2 ? \".\" + values[1] : \"\")\n        );\n    }\n\n    const loadWeb3 = async () => {\n        let isConnected = false;\n        try {\n            if (window.ethereum) {\n                window.web3 = new Web3(window.ethereum);\n                await window.ethereum.enable();\n                isConnected = true;\n            } else if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n                isConnected = true;\n            } else {\n                isConnected = false;\n                console.log(\"Metamask is not installed, please install it on your browser to connect.\");\n                // alert(\"Metamask is not installed, please install it on your browser to connect.\");\n            }\n            if (isConnected === true) {\n                let accounts = await getAccounts();\n                // setAccount(accounts[0]);\n                accountAd = accounts[0];\n                setAccount(accountAd);\n                let accountDetails = null;\n                window.ethereum.on(\"accountsChanged\", function (accounts) {\n                    // setAccount(accounts[0]);\n                    accountAd = accounts[0];\n                    setAccount(accountAd);\n                    // console.log(accounts);\n                });\n            }\n            getData();\n        } catch (error) {\n            console.log(\"Error while connecting metamask\", error);\n            // alert(\"Error while connecting metamask\");\n        }\n    };\n\n\n    const getAccounts = async () => {\n        const web3 = window.web3;\n        try {\n            let accounts = await web3.eth.getAccounts();\n            // console.log(accounts);\n            return accounts;\n        } catch (error) {\n            console.log(\"Error while fetching acounts: \", error);\n            return null;\n        }\n    };\n\n    // eslint-disable-next-line\n    const isLockedAccount = async () => {\n        try {\n            let accounts = await getAccounts();\n            if (accounts.length > 0) {\n                // console.log(\"Metamask is unlocked\");\n            } else {\n                console.log(\"Metamask is locked\");\n            }\n        } catch (error) {\n            // alert(\"Error while checking locked account\");\n        }\n    };\n\n    useEffect(() => {\n        setInterval(() => {\n            loadWeb3();\n        }, 1000);\n    }, []);\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-8\">\n                        <div className=\"info\">\n                            <p>Total income: based on your tarrif plan<span> (from 5% to 8% daily)</span></p>\n                            <p>Basic interest rate:<span> +0.5% every 24 hours</span> - only for new deposits</p>\n                            <p>Minimal deposit: <span>0.05 Knight Doge</span>, no maximal limit</p>\n                            <p>Earnings <span>every moment</span>, withdraw <span>any time </span>(if you use capitalization of interest you can withdraw only after end of your deposit)</p>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                        <span className=\"infostaked\">\n                            {/* Total Users */}\n                            <a\n                                href={`https://bscscan.com/address/${contractAddress}`}\n                                target=\"_blank\"\n                                className='badge' bg=\"light\" text=\"dark\">\n                                contract\n                            </a>\n                        </span>\n                        {/* <span className=\"infostakedvalue\">{totalusers}</span> */}\n                        <span className=\"infostaked\">Total Contract Balance</span>\n                        <span className=\"infostakedvalue\">{contractBalance}</span>\n                    </div>\n                </div>\n            </div>\n        </div >\n    );\n}\n\nexport default Info;\n","import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport {\n    contractAddress,\n    abi,\n    tokenAddres,\n    tokenAbi,\n    refDefaultAddress\n} from \"../../../utils/constant\";\nimport './banner.css';\nimport { toast } from 'react-toastify';\n\n// import logo from \"../../asset/images/logo.png\";\nimport logo from \"../../../asset/images/logo.png\";\nimport menuIcon from \"../../../asset/images/menuIcon.png\";\nimport { Container } from \"react-bootstrap\";\nfunction Banner() {\n\n    let accountAd;\n    const [disable, setDisable]= useState(false);\n    const [disable1, setDisable1]= useState(false);\n    const [disable2, setDisable2]= useState(false);\n\n    const [account, setAccount] = useState(\"Connect\");\n    const [upline, setUpline] = useState(refDefaultAddress);\n\n    const [dailyProfit1, set1dailyProfit] = useState(2.33);\n    const [totalReturn1, set1TotalReturn] = useState(7);\n    const [withdrawn1, set1withdrawn] = useState(0);\n    const [withdrawnAble1, set1withdrawAble] = useState(0);\n    const [enterAmount1, set1EnterAmount] = useState(0);\n\n    const [fourteenDaysReward1, set1fourteenDaysReward] = useState(0);\n    const [days1, set1days] = useState(0);\n\n    const [dailyProfit2, set2dailyProfit] = useState(2.4);\n    const [totalReturn2, set2TotalReturn] = useState(12);\n    const [withdrawn2, set2withdrawn] = useState(0);\n    const [withdrawnAble2, set2withdrawAble] = useState(0);\n    const [enterAmount2, set2EnterAmount] = useState(0);\n    const [fourteenDaysReward2, set2fourteenDaysReward] = useState(0);\n    const [days2, set2days] = useState(1);\n\n    const [dailyProfit3, set3dailyProfit] = useState(1.5);\n    const [totalReturn3, set3TotalReturn] = useState(18);\n    const [withdrawn3, set3withdrawn] = useState(0);\n    const [withdrawnAble3, set3withdrawAble] = useState(0);\n    const [enterAmount3, set3EnterAmount] = useState(0);\n    const [fourteenDaysReward3, set3fourteenDaysReward] = useState(0);\n    const [days3, set3days] = useState(2);\n\n    const getData = async () => {\n        try {\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            // console.log(\"data\", web3);\n            let users = await contract.methods.Users(accountAd).call();\n            // console.log(\"users\", users);\n            // console.log(\"users\", users.lockableDays);\n            if (users.lockableDays == days1) {\n                // console.log(\"users\", days1);\n                let dailyprofit1 = await contract.methods.allocation(days1).call();\n                let daily = dailyprofit1 / 365;\n                let treturn = daily * days1;\n                set1TotalReturn(treturn);\n                // set1withdrawAble(users.WithdrawAbleReward);\n                // set1withdrawAble(users.totalreward);\n                set1withdrawn(users.WithdrawReward);\n                set1dailyProfit(daily);\n\n            } else if (users.lockableDays == days2) {\n                // console.log(\"users\", days2);\n                let dailyprofit2 = await contract.methods.allocation(days2).call();\n                let daily = dailyprofit2 / 365;\n                let treturn = daily * days2;\n                set2TotalReturn(treturn);\n                set2withdrawn(users.WithdrawReward);\n                // set2withdrawAble(users.totalreward);\n                set2dailyProfit(daily);\n\n            } else if (users.lockableDays == days3) {\n                // console.log(\"users\", days3);\n                let dailyprofit3 = await contract.methods.allocation(days3).call();\n                let daily = dailyprofit3 / 365;\n                let treturn = daily * days3;\n                set3TotalReturn(treturn);\n                set3withdrawn(users.WithdrawReward);\n                // set3withdrawAble(users.totalreward);\n                set3dailyProfit(daily);\n            }\n            // set3withdrawAble\n\n        } catch (error) {\n            console.log(\"Error while checking locked account\", error);\n        }\n    };\n    const DepositPlan3 = async (e) => {\n        try {\n            console.log(\"Plan 3\")\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            let tokenContract = new web3.eth.Contract(tokenAbi, tokenAddres);\n                let RemainingTokens =await tokenContract.methods.balanceOf(account).call();\n                let ActualRemainingTokens = await web3.utils.fromWei(RemainingTokens);\n                console.log(\"ahan \", enterAmount3)\n                if (enterAmount3 >= 1) \n                {\n                    if(parseInt(enterAmount3)>ActualRemainingTokens){\n                        \n                        toast.error(\"Oops! Your Entered Amount is greater than Your Balance\");\n                    }\n                    else{\n                    console.log(\"Check Account\",account)\n                     let Accountinfo =await tokenContract.methods.allowance(account,contractAddress)\n                        .call()\n                        // account info = 300000000\n                        console.log(\"Account Info:\", Accountinfo)\n                       await tokenContract.methods.approve(contractAddress, web3.utils.toWei(\"\" + enterAmount3))\n                                .send({\n                                    from: account\n                        })\n                \n                        .then(async (output) => {\n                                      toast.success(\"Transaction Approved\");\n                            }).catch((e) => {\n                            console.log(\"response\", e);\n                            toast.error(e.message);\n                        });\n                    } \n                } else {\n                    toast(\"Minimum amount is 1 Knight Doge\")\n                }\n            \n        } catch (error) {\n            console.log(\"response\", error);\n            toast.error(\"Error while checking locked account\");\n        }\n    };\nconst DepositPlan2 = async (e) => {\n    try {\n        console.log(\"Plan 2\")\n        const web3 = window.web3;\n        let contract = new web3.eth.Contract(abi, contractAddress);\n        let tokenContract = new web3.eth.Contract(tokenAbi, tokenAddres);\n            let RemainingTokens =await tokenContract.methods.balanceOf(account).call();\n            let ActualRemainingTokens = await web3.utils.fromWei(RemainingTokens);\n            if (enterAmount2 >= 1) \n            {\n                if(parseInt(enterAmount2)>ActualRemainingTokens){\n                    \n                    toast.error(\"Oops! Your Entered Amount is greater than Your Balance\");\n                }\n                else{\n                console.log(\"Check Account\",account)\n                 let Accountinfo =await tokenContract.methods.allowance(account,contractAddress)\n                    .call()\n                    // account info = 300000000\n                    console.log(\"Account Info:\", Accountinfo)\n                   await tokenContract.methods.approve(contractAddress, web3.utils.toWei(\"\" + enterAmount2))\n                            .send({\n                                from: account\n                    })\n            \n                    .then(async (output) => {\n                                  toast.success(\"Transaction Approved\");\n                        }).catch((e) => {\n                        console.log(\"response\", e);\n                        toast.error(e.message);\n                    });\n                } \n            } else {\n                toast(\"Minimum amount is 1 Knight Doge\")\n            }\n        \n    } catch (error) {\n        console.log(\"response\", error);\n        toast.error(\"Error while checking locked account\");\n    }\n};\n    const DepositPlan1 = async (e) => {\n        try {\n            console.log(\"Plan 1\")\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            let tokenContract = new web3.eth.Contract(tokenAbi, tokenAddres);\n                let RemainingTokens =await tokenContract.methods.balanceOf(account).call();\n                let ActualRemainingTokens = await web3.utils.fromWei(RemainingTokens);\n                if (enterAmount1 >= 1) \n                {\n                    if(parseInt(enterAmount1)>ActualRemainingTokens){\n                        \n                        toast.error(\"Oops! Your Entered Amount is greater than Your Balance\");\n                    }\n                    else{\n                    console.log(\"Check Account\",account)\n                     let Accountinfo =await tokenContract.methods.allowance(account,contractAddress)\n                        .call()\n                        // account info = 300000000\n                        console.log(\"Account Info:\", Accountinfo)\n                       await tokenContract.methods.approve(contractAddress, web3.utils.toWei(\"\" + enterAmount1))\n                                .send({\n                                    from: account\n                        })\n                \n                        .then(async (output) => {\n                                      toast.success(\"Transaction Approved\");\n                            }).catch((e) => {\n                            console.log(\"response\", e);\n                            toast.error(e.message);\n                        });\n                    } \n                } else {\n                    toast(\"Minimum amount is 1 Knight Doge\")\n                }\n            \n        } catch (error) {\n            console.log(\"response\", error);\n            toast.error(\"Error while checking locked account\");\n        }\n    };\n\n// Invest Function \n\nconst Invest = async (e) => {\n    try {\n        console.log(\"upline\", upline)\n        console.log(\"deposite\", e.target.name)\n        const name = e.target.name;\n        const web3 = window.web3;\n\n        let contract = new web3.eth.Contract(abi, contractAddress);\n        let tokenContract = new web3.eth.Contract(tokenAbi, tokenAddres);\n        // let checkuser = await contract.methods._chakUpline(upline).call();\n        // if (checkuser) {\n        if (name === 'planone') {\n            if (enterAmount1 >= 1) \n            {\n                contract.methods.invest(upline, days2, web3.utils.toWei(enterAmount1))\n                .send({\n                    from: account\n                }).then(async (output) => {\n                                  toast.success(\"Transaction Completed\");\n                                // toast.success(\"Transaction Completed\");\n                        }).catch((e) => {\n                        console.log(\"response\", e);\n                        toast.error(e.message);\n                    });\n                \n            } else {\n                toast(\"Minimum amount is 1 Knight Doge\")\n            }\n\n        } else if (name === 'plantwo') {\n            if (enterAmount2 >= 1) {\n                contract.methods.invest(upline, days2, web3.utils.toWei(enterAmount2))\n                            .send({\n                                from: account\n                            })\n                            .then(async (output) => {\n                                toast.success(\"Transaction Completed\");\n                            \n                    }).catch((e) => {\n                        console.log(\"response\", e);\n                        toast.error(e.message);\n                    });\n            } else {\n                toast(\"Minimum amount is 1 Knight Doge\")\n            }\n        }\n        else if (name === 'planthree') {\n            if (enterAmount3 >= 1) {\n                 await contract.methods.invest(upline, days3, web3.utils.toWei(enterAmount3))\n                            .send({\n                                from: account\n                            })\n                            .then(async (output) => {\n                                toast.success(\"Transaction Completed\");\n                            \n                    }).catch((e) => {\n                        console.log(\"response\", e);\n                        // toast.error(e.message);\n                    });\n            } else {\n                toast(\"Minimum amount is 1 Knight Doge\")\n            }\n        }\n        // } else {\n        //     toast(\"Refferal Address is not Correct\");\n        //     console.log(\"Refferal Address is not Correct\");\n        // }\n    } catch (error) {\n        console.log(\"response\", error);\n        toast.error(\"Error while checking locked account\");\n        // alert(\"Error while checking locked account\");\n    }\n};\n\n\n\n    const unstake = async () => {\n        try {\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            // console.log(\"withrawableDepositeAmount\", accountAd, account);\n            let users = await contract.methods.Users(account).call();\n\n            // console.log(\"withrawableDepositeAmount\", users);\n\n\n            if (users.withrawableDepositeAmount > 0) {\n                if (users.WithdrawAbleReward <= 0) {\n                    let dailyprofit1 = await contract.methods.Withdraw_Staking_Amount()\n                        .send({\n                            from: account\n                        })\n                        .then(async (output) => {\n                            toast.success(\"Transaction Completed\");\n                        }).catch((e) => {\n                            console.log(\"response\", e);\n                            toast.error(e.message);\n                        });\n                } else {\n                    console.log(\"response\");\n                    toast(\"withdraw reward first\");\n                }\n            } else {\n                toast(\"No Claim available\");\n            }\n        } catch (error) {\n            console.log(\"response\", error);\n            // alert(\"Error while checking locked account\");\n        }\n    };\n\n \n    const checkReward = async (e) => {\n        try {\n            console.log(\"deposite\", e.target.name)\n            const name = e.target.name;\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            // if (name === 'planone') {\n            let rewards = await contract.methods.Rewards()\n                .send({\n                    from: account\n                })\n                .then(async (output) => {\n                    toast.success(\"Transaction Completed\");\n                }).catch((e) => {\n                    console.log(\"response\", e);\n                    toast.error(e.message);\n                });\n            // } \n        } catch (error) {\n            console.log(\"response\", error);\n            // alert(\"Error while checking locked account\");\n        }\n    };\n\n\n// For amount 1\n    const enter1AmountCall = async (e) => {\n        const web3 = window.web3;\n        // await set1EnterAmount(e.target.value);\n        let tokenContract = new web3.eth.Contract(tokenAbi, tokenAddres);\n        let Accountinfo =await tokenContract.methods.allowance(account,contractAddress)\n        .call();\n         let finalAmount =await web3.utils.fromWei(Accountinfo) \n        //  console.log(\"Final Amount\", finalAmount)\n        // console.log(\"Amount1\",enterAmount1);\n        console.log(parseFloat(e.target.value)<parseFloat(finalAmount));\n        let valueEntered=e.target.value;\n         if (parseFloat(valueEntered)<=parseFloat(finalAmount))\n        {\n            console.log(\"called\");\n            setDisable(true);\n            console.log(\"Account info\",finalAmount)\n        }\n        else{\n            setDisable(false)\n        }\n        try {\n            const name = e.target.name;\n            // console.log(\"name\", name);\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            if (name === 'first_input') {\n                let valueEntered=e.target.value;\n                let value = e.target.value\n                console.log(\"here\",value);\n                 await set1EnterAmount(value);\n                 console.log(\"Amount 1 = \",enterAmount1)\n                let check_reward = await contract.methods.getResult(days1, web3.utils.toWei(e.target.value)).call();\n                // console.log(\"check_reward\", check_reward.profit)\n                set1withdrawAble(formatThousands(web3.utils.fromWei(check_reward.profit)));\n            }\n        } catch (error) {\n            console.log(\"Error while checking locked account\", error);\n        }\n    };\n// For Amount 2\n\nconst enter2AmountCall = async (e) => {\n    const web3 = window.web3;\n    // await set1EnterAmount(e.target.value);\n    let tokenContract = new web3.eth.Contract(tokenAbi, tokenAddres);\n    let Accountinfo =await tokenContract.methods.allowance(account,contractAddress)\n    .call();\n     let finalAmount =await web3.utils.fromWei(Accountinfo) \n    //  console.log(\"Final Amount\", finalAmount)\n    // console.log(\"Amount1\",enterAmount1);\n    console.log(parseFloat(e.target.value)<parseFloat(finalAmount));\n    let valueEntered=e.target.value;\n     if (parseFloat(valueEntered)<=parseFloat(finalAmount))\n    {\n        console.log(\"called\");\n        setDisable1(true);\n        console.log(\"Account info\",finalAmount)\n    }\n    else{\n        setDisable1(false)\n    }\n    try {\n        const name = e.target.name;\n        // console.log(\"name\", name);\n        const web3 = window.web3;\n        let contract = new web3.eth.Contract(abi, contractAddress);\n        if (name === 'second_input') {\n            let value = e.target.value\n            console.log(\"Amount2\",value);\n             await set2EnterAmount(value);\n             console.log(\"Amount 2 = \",enterAmount2)\n            let check_reward = await contract.methods.getResult(days1, web3.utils.toWei(e.target.value)).call();\n            // console.log(\"check_reward\", check_reward.profit)\n            set2withdrawAble(formatThousands(web3.utils.fromWei(check_reward.profit)));\n        } \n    } catch (error) {\n        console.log(\"Error while checking locked account\", error);\n    }\n};\n// For Amount 3\n\nconst enter3AmountCall = async (e) => {\n    const web3 = window.web3;\n    // await set1EnterAmount(e.target.value);\n    let tokenContract = new web3.eth.Contract(tokenAbi, tokenAddres);\n    let Accountinfo =await tokenContract.methods.allowance(account,contractAddress)\n    .call();\n     let finalAmount =await web3.utils.fromWei(Accountinfo) \n    //  console.log(\"Final Amount\", finalAmount)\n    // console.log(\"Amount1\",enterAmount1);\n    console.log(parseFloat(e.target.value)<parseFloat(finalAmount));\n    let valueEntered=e.target.value;\n     if (parseFloat(valueEntered)<=parseFloat(finalAmount))\n    {\n        console.log(\"called\");\n        setDisable2(true);\n        console.log(\"Account info\",finalAmount)\n    }\n    else{\n        setDisable2(false)\n    }\n    try {\n        const name = e.target.name;\n        // console.log(\"name\", name);\n        const web3 = window.web3;\n        let contract = new web3.eth.Contract(abi, contractAddress);\n        if (name === 'third_input') {\n            let valueEntered=e.target.value;\n            let value = e.target.value\n            console.log(\"Amount 3\",value);\n             await set3EnterAmount(value);\n             console.log(\"Amount 3 = \",enterAmount3)\n            let check_reward = await contract.methods.getResult(days1, web3.utils.toWei(e.target.value)).call();\n            // console.log(\"check_reward\", check_reward.profit)\n            set3withdrawAble(formatThousands(web3.utils.fromWei(check_reward.profit)));\n        }\n    } catch (error) {\n        console.log(\"Error while checking locked account\", error);\n    }\n};\n\n    function formatThousands(num) {\n        var numbr = parseFloat(parseFloat(num).toFixed(2));\n        // console.log(\"num\", parseFloat(numbr));\n        var values = numbr.toString().split(\".\");\n        return (\n            values[0].replace(/.(?=(?:.{3})+$)/g, \"$&,\") +\n            (values.length == 2 ? \".\" + values[1] : \"\")\n        );\n    }\n\n    const loadWeb3 = async () => {\n        let isConnected = false;\n        try {\n            if (window.ethereum) {\n                window.web3 = new Web3(window.ethereum);\n                await window.ethereum.enable();\n                isConnected = true;\n            } else if (window.web3){\n                window.web3 = new Web3(window.web3.currentProvider);\n                isConnected = true;\n            } else {\n                isConnected = false;\n                console.log(\"Metamask is not installed, please install it on your browser to connect.\");\n                // alert(\"Metamask is not installed, please install it on your browser to connect.\");\n            }\n            if (isConnected === true) {\n                let accounts = await getAccounts();\n                // setAccount(accounts[0]);\n                accountAd = accounts[0];\n                setAccount(accountAd);\n                let accountDetails = null;\n                window.ethereum.on(\"accountsChanged\", function (accounts) {\n                    // setAccount(accounts[0]);\n                    accountAd = accounts[0];\n                    setAccount(accountAd);\n                    // console.log(accounts);\n                });\n            }\n            // getData();\n        } catch (error) {\n            console.log(\"Error while connecting metamask\", error);\n            // alert(\"Error while connecting metamask\");\n        }\n    };\n\n    const getAccounts = async () => {\n        const web3 = window.web3;\n        try {\n            let accounts = await web3.eth.getAccounts();\n            // console.log(accounts);\n            return accounts;\n        } catch (error) {\n            console.log(\"Error while fetching acounts: \", error);\n            return null;\n        }\n    };\n\n    // eslint-disable-next-line\n    const isLockedAccount = async () => {\n        try {\n            let accounts = await getAccounts();\n            if (accounts.length > 0) {\n                // console.log(\"Metamask is unlocked\");\n            } else {\n                console.log(\"Metamask is locked\");\n            }\n        } catch (error) {\n            console.log(\"Error while checking locked account\");\n        }\n    };\n\n    useEffect(() => {\n        setInterval(() => {\n            loadWeb3();\n        }, 1000);\n    }, []);\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-4\">\n                        <div className=\"bannercard1\">\n                            <div className=\"col-md-12\" id=\"plan\">\n                                <span>Plan A</span>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Daily Profit</span>\n                                    <span className=\"bannervalue\">{dailyProfit1}%</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Total Return</span>\n                                    <span className=\"bannervalue\">{totalReturn1}%</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Withdraw time</span>\n                                    <span className=\"bannervalue\">\n                                        Any Time\n                                        {/* {withdrawn1} */}\n                                    </span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Days</span>\n                                    <span className=\"bannervalue\">\n                                        3\n                                        {/* {days1} */}\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Enter Amount</span>\n                                    {/* <span className=\"bannervalue\">0%</span> */}\n\n                                    <input className=\"stakeinput\"\n                                        placeholder=\"0\"\n                                        name=\"first_input\"\n                                        type=\"number\"\n                                        onChange={enter1AmountCall} />\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">In 14 days you will get</span>\n                                    <span className=\"bannervalue1 py-2\">{withdrawnAble1}</span>\n                                </div>\n                            </div>\n                            {/* <div class=\"d-grid gap-2\"> */}\n                            {/* <div className=\"row\">\n                                <div className=\"col-sm\">\n                                    <button type=\"button\" className=\"btn btn-grad\" id=\"ImageColor\"\n                                        name=\"planone\"\n                                        onClick={Deposite}>\n                                        KNIGHTDOGE\n                                    </button>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <button type=\"button\" className=\"btn btn-grad\" id=\"ImageColor\"\n                                        // name=\"planone\"\n                                        onClick={unstake}>\n                                        Claim HUTT\n                                    </button>\n                                </div>\n                            </div> */}\n                            <div class=\"d-grid gap-2\">\n                                \n                                    <button type=\"button\" disabled={disable}  className=\"btn btn-gradd btn-block \"\n                                    name=\"planone\"\n                                    onClick={DepositPlan1}>\n                                    Approve\n                                </button>\n                                \n                                \n                                <button type=\"button\" disabled={!disable} className=\"btn btn-gradd btn-block\"\n                                    name=\"planone\"\n                                    onClick={Invest}>\n                                    Invest\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                        <div className=\"bannercard1\">\n                            <div className=\"col-md-12\" id=\"plan\">\n                                <span>Plan B</span>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Daily Profit</span>\n                                    <span className=\"bannervalue\">{dailyProfit2}%</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Total Return</span>\n                                    <span className=\"bannervalue\">{totalReturn2}%</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Withdraw time</span>\n                                    <span className=\"bannervalue\">Any Time</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Days</span>\n                                    <span className=\"bannervalue\">\n                                        5</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Enter Amount</span>\n                                    {/* <span className=\"bannervalue\">0%</span> */}\n\n                                    <input className=\"stakeinput\"\n                                        placeholder=\"0\"\n                                        name=\"second_input\"\n                                        type=\"number\"\n                                        onChange={enter2AmountCall}\n                                    />\n\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">In 21 days you will get</span>\n                                    <span className=\"bannervalue1 py-2\">{withdrawnAble2}</span>\n                                </div>\n                            </div>\n                            {/* <div className=\"row\">\n                                <div className=\"col-sm\">\n                                    <button type=\"button\" className=\"btn btn-grad\" id=\"ImageColor\"\n                                        name=\"plantwo\"\n                                        onClick={Deposite}>\n                                        KNIGHTDOGE\n                                    </button>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <button type=\"button\" className=\"btn btn-grad\" id=\"ImageColor\"\n                                        // name=\"plantwo\"\n                                        onClick={unstake}>\n                                        Claim HUTT\n                                    </button>\n                                </div>\n                            </div> */}\n\n                            <div class=\"d-grid gap-2\">\n                            <button type=\"button\" disabled={disable1}  className=\"btn btn-gradd btn-block \"\n                                    name=\"planone\"\n                                    onClick={DepositPlan2}>\n                                    Approve\n                                </button>\n                                <button type=\"button\" disabled={!disable1} className=\"btn btn-gradd btn-block\"\n                                    name=\"planone\"\n                                    onClick={Invest}>\n                                    Invest\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                        <div className=\"bannercard1\">\n                            <div className=\"col-md-12\" id=\"plan\">\n                                <span>Plan C</span>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Daily Profit</span>\n                                    <span className=\"bannervalue\">{dailyProfit3}%</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Total Return</span>\n                                    <span className=\"bannervalue\">{totalReturn3}%</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Withdraw time</span>\n                                    <span className=\"bannervalue\">Any Time</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Days</span>\n                                    <span className=\"bannervalue\">12</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Enter Amount</span>\n\n                                    <input className=\"stakeinput\"\n                                        placeholder=\"0\"\n                                        name=\"third_input\"\n                                        type=\"number\"\n                                        onChange={enter3AmountCall}\n                                    />\n\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">In 28 days you will get</span>\n                                    <span className=\"bannervalue1 py-2\">{withdrawnAble3}</span>\n                                </div>\n                            </div>\n                            {/* <div className=\"row\">\n                                <div className=\"col-sm\">\n                                    <button type=\"button\" className=\"btn btn-grad\" id=\"ImageColor\"\n                                        name=\"planthree\"\n                                        onClick={Deposite}>\n                                        KNIGHTDOGE\n                                    </button>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <button type=\"button\" className=\"btn btn-grad\" id=\"ImageColor\"\n                                        name=\"planthree\"\n                                        onClick={unstake}>\n                                        Claim HUTT\n                                    </button>\n                                </div>\n                            </div> */}\n                            <div class=\"d-grid gap-2\">\n                            <button type=\"button\" disabled={disable2} className=\"btn btn-gradd btn-block \"\n                                    name=\"planone\"\n                                    onClick={DepositPlan3}>\n                                    Approve\n                                </button>\n                                <button type=\"button\" disabled={!disable2} className=\"btn btn-gradd btn-block\"\n                                    name=\"planone\"\n                                    onClick={Invest}>\n                                    Invest\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div >\n    );\n}\n\nexport default Banner;\n","import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport {\n    contractAddress,\n    abi,\n    tokenAddres,\n    tokenAbi, refDefaultAddress\n} from \"../../../utils/constant\";\nimport './bannerendplan.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\n// import logo from \"../../asset/images/logo.png\";\nimport logo from \"../../../asset/images/logo.png\";\nimport menuIcon from \"../../../asset/images/menuIcon.png\";\nimport { Container } from \"react-bootstrap\";\nfunction BannerEndPlan() {\n\n    let accountAd;\n    const [account, setAccount] = useState(\"Connect\");\n    const [upline, setUpline] = useState(refDefaultAddress);\n    const [disable, setDisable]= useState(false);\n    const [disable1, setDisable1]= useState(false);\n    const [disable2, setDisable2]= useState(false);\n    const [dailyProfit1, set1dailyProfit] = useState(2.61);\n    const [totalReturn1, set1TotalReturn] = useState(55);\n    const [withdrawn1, set1withdrawn] = useState(0);\n    const [withdrawnAble1, set1withdrawAble] = useState(0);\n    const [enterAmount1, set1EnterAmount] = useState(0);\n    const [fourteenDaysReward1, set1fourteenDaysReward] = useState(0);\n    const [days1, set1days] = useState(3);\n\n    const [dailyProfit2, set2dailyProfit] = useState(1.81);\n    const [totalReturn2, set2TotalReturn] = useState(80);\n    const [withdrawn2, set2withdrawn] = useState(0);\n    const [withdrawnAble2, set2withdrawAble] = useState(0);\n    const [enterAmount2, set2EnterAmount] = useState(0);\n    const [fourteenDaysReward2, set2fourteenDaysReward] = useState(0);\n    const [days2, set2days] = useState(4);\n\n    const [dailyProfit3, set3dailyProfit] = useState(3);\n    const [totalReturn3, set3TotalReturn] = useState(180);\n    const [withdrawn3, set3withdrawn] = useState(0);\n    const [withdrawnAble3, set3withdrawAble] = useState(0);\n    const [enterAmount3, set3EnterAmount] = useState(0);\n    const [fourteenDaysReward3, set3fourteenDaysReward] = useState(0);\n    const [days3, set3days] = useState(5);\n\n    const getData = async () => {\n        try {\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            // console.log(\"data\", web3);\n            let users = await contract.methods.Users(accountAd).call();\n            // console.log(\"users\", users);\n            // console.log(\"users\", users.lockableDays);\n            if (users.lockableDays == days1) {\n                // console.log(\"users\", days1);\n                let dailyprofit1 = await contract.methods.allocation(days1).call();\n                let daily = dailyprofit1 / 365;\n                let treturn = daily * days1;\n                set3TotalReturn(treturn);\n                // set1withdrawAble(users.WithdrawAbleReward);\n                set1withdrawn(users.WithdrawReward);\n                set1dailyProfit(daily);\n\n            } else if (users.lockableDays == days2) {\n                // console.log(\"users\", days2);\n                let dailyprofit2 = await contract.methods.allocation(days2).call();\n                let daily = dailyprofit2 / 365;\n                let treturn = daily * days2;\n                set3TotalReturn(treturn);\n                set2withdrawn(users.WithdrawReward);\n                // set2withdrawAble(users.WithdrawAbleReward);\n                set2dailyProfit(daily);\n\n            } else if (users.lockableDays == days3) {\n                // console.log(\"users\", days3);\n                let dailyprofit3 = await contract.methods.allocation(days3).call();\n                let daily = dailyprofit3 / 365;\n                let treturn = daily * days3;\n                set3TotalReturn(treturn);\n                set3withdrawn(users.WithdrawReward);\n                // set3withdrawAble(users.WithdrawAbleReward);\n                set3dailyProfit(daily);\n            }\n            // set3withdrawAble\n\n        } catch (error) {\n            console.log(\"Error while checking locked account\", error);\n        }\n    };\n    const DepositPlan3 = async (e) => {\n        try {\n            console.log(\"Plan 3\")\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            let tokenContract = new web3.eth.Contract(tokenAbi, tokenAddres);\n                let RemainingTokens =await tokenContract.methods.balanceOf(account).call();\n                let ActualRemainingTokens = await web3.utils.fromWei(RemainingTokens);\n                if (enterAmount3 >= 1) \n                {\n                    if(parseInt(enterAmount3)>ActualRemainingTokens){\n                        \n                        toast.error(\"Oops! Your Entered Amount is greater than Your Balance\");\n                    }\n                    else{\n                    console.log(\"Check Account\",account)\n                     let Accountinfo =await tokenContract.methods.allowance(account,contractAddress)\n                        .call()\n                        // account info = 300000000\n                        console.log(\"Account Info:\", Accountinfo)\n                       await tokenContract.methods.approve(contractAddress, web3.utils.toWei(\"\" + enterAmount3))\n                                .send({\n                                    from: account\n                        })\n                \n                        .then(async (output) => {\n                                      toast.success(\"Transaction Approved\");\n                            }).catch((e) => {\n                            console.log(\"response\", e);\n                            toast.error(e.message);\n                        });\n                    } \n                } else {\n                    toast(\"Minimum amount is 1 Knight Doge\")\n                }\n            \n        } catch (error) {\n            console.log(\"response\", error);\n            toast.error(\"Error while checking locked account\");\n        }\n    };\nconst DepositPlan2 = async (e) => {\n    try {\n        console.log(\"Plan 2\")\n        const web3 = window.web3;\n        let contract = new web3.eth.Contract(abi, contractAddress);\n        let tokenContract = new web3.eth.Contract(tokenAbi, tokenAddres);\n            let RemainingTokens =await tokenContract.methods.balanceOf(account).call();\n            let ActualRemainingTokens = await web3.utils.fromWei(RemainingTokens);\n            if (enterAmount2 >= 1) \n            {\n                if(parseInt(enterAmount2)>ActualRemainingTokens){\n                    \n                    toast.error(\"Oops! Your Entered Amount is greater than Your Balance\");\n                }\n                else{\n                console.log(\"Check Account\",account)\n                 let Accountinfo =await tokenContract.methods.allowance(account,contractAddress)\n                    .call()\n                    // account info = 300000000\n                    console.log(\"Account Info:\", Accountinfo)\n                   await tokenContract.methods.approve(contractAddress, web3.utils.toWei(\"\" + enterAmount2))\n                            .send({\n                                from: account\n                    })\n            \n                    .then(async (output) => {\n                                  toast.success(\"Transaction Approved\");\n                        }).catch((e) => {\n                        console.log(\"response\", e);\n                        toast.error(e.message);\n                    });\n                } \n            } else {\n                toast(\"Minimum amount is 1 Knight Doge\")\n            }\n        \n    } catch (error) {\n        console.log(\"response\", error);\n        toast.error(\"Error while checking locked account\");\n    }\n};\n    const DepositPlan1 = async (e) => {\n        try {\n            console.log(\"Plan 1\")\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            let tokenContract = new web3.eth.Contract(tokenAbi, tokenAddres);\n                let RemainingTokens =await tokenContract.methods.balanceOf(account).call();\n                let ActualRemainingTokens = await web3.utils.fromWei(RemainingTokens);\n                if (enterAmount1 >= 1) \n                {\n                    if(parseInt(enterAmount1)>ActualRemainingTokens){\n                        \n                        toast.error(\"Oops! Your Entered Amount is greater than Your Balance\");\n                    }\n                    else{\n                    console.log(\"Check Account\",account)\n                     let Accountinfo =await tokenContract.methods.allowance(account,contractAddress)\n                        .call()\n                        // account info = 300000000\n                        console.log(\"Account Info:\", Accountinfo)\n                       await tokenContract.methods.approve(contractAddress, web3.utils.toWei(\"\" + enterAmount1))\n                                .send({\n                                    from: account\n                        })\n                \n                        .then(async (output) => {\n                                      toast.success(\"Transaction Approved\");\n                            }).catch((e) => {\n                            console.log(\"response\", e);\n                            toast.error(e.message);\n                        });\n                    } \n                } else {\n                    toast(\"Minimum amount is 1 Knight Doge\")\n                }\n            \n        } catch (error) {\n            console.log(\"response\", error);\n            toast.error(\"Error while checking locked account\");\n        }\n    };\n// Invest Function\nconst Invest = async (e) => {\n    try {\n        console.log(\"upline\", upline)\n        console.log(\"deposite\", e.target.name)\n        const name = e.target.name;\n        const web3 = window.web3;\n        let contract = new web3.eth.Contract(abi, contractAddress);\n        let tokenContract = new web3.eth.Contract(tokenAbi, tokenAddres);\n        // let checkuser = await contract.methods._chakUpline(upline).call();\n        // if (checkuser) {\n            let RemainingTokens =await tokenContract.methods.balanceOf(account).call();\n                let ActualRemainingTokens = await web3.utils.fromWei(RemainingTokens);\n        if (name === 'planone') {\n            if (enterAmount1 >= 1) \n            {\n                \n                contract.methods.invest(upline, days2, web3.utils.toWei(enterAmount1))\n                .send({\n                    from: account\n                }).then(async (output) => {\n                                  toast.success(\"Transaction Completed\");\n                                // toast.success(\"Transaction Completed\");\n                        }).catch((e) => {\n                        console.log(\"response\", e);\n                        toast.error(e.message);\n                    });\n                \n            } \n        else {\n                toast(\"Minimum amount is 1 Knight Doge\")\n            }\n\n        } else if (name === 'plantwo') {\n            if (enterAmount2 >= 1) {\n                \n                contract.methods.invest(upline, days2, web3.utils.toWei(enterAmount2))\n                            .send({\n                                from: account\n                            })\n                            .then(async (output) => {\n                                toast.success(\"Transaction Completed\");\n                            \n                    }).catch((e) => {\n                        console.log(\"response\", e);\n                        toast.error(e.message);\n                    });\n            }\n          else {\n                toast(\"Minimum amount is 1 Knight Doge\")\n            }\n        }\n        else if (name === 'planthree') {\n            if (enterAmount3 >= 1) {\n               \n                 await contract.methods.invest(upline, days3, web3.utils.toWei(enterAmount3))\n                            .send({\n                                from: account\n                            })\n                            .then(async (output) => {\n                                toast.success(\"Transaction Completed\");\n                            \n                    }).catch((e) => {\n                        console.log(\"response\", e);\n                        // toast.error(e.message);\n                    });\n            }\n          else {\n                toast(\"Minimum amount is 1 Knight Doge\")\n            }\n        }\n        // } else {\n        //     toast(\"Refferal Address is not Correct\");\n        //     console.log(\"Refferal Address is not Correct\");\n        // }\n    } catch (error) {\n        console.log(\"response\", error);\n        toast.error(\"Error while checking locked account\");\n        // alert(\"Error while checking locked account\");\n    }\n};\n\n\n\n\n    const unstake = async () => {\n        try {\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            // console.log(\"withrawableDepositeAmount\", accountAd, account);\n            let users = await contract.methods.Users(account).call();\n\n            // console.log(\"withrawableDepositeAmount\", users);\n\n            if (users.withrawableDepositeAmount > 0) {\n                if (users.WithdrawAbleReward <= 0) {\n                    let dailyprofit1 = await contract.methods.Withdraw_Staking_Amount()\n                        .send({\n                            from: account\n                        })\n                        .then(async (output) => {\n                            toast.success(\"Transaction Completed\");\n                        }).catch((e) => {\n                            console.log(\"response\", e);\n                            toast.error(e.message);\n                        });\n                } else {\n                    toast(\"withdraw reward first\");\n                }\n            } else {\n                toast(\"No Claim available\");\n            }\n        } catch (error) {\n            console.log(\"response\", error);\n            // alert(\"Error while checking locked account\");\n        }\n    };\n    const checkReward = async (e) => {\n        try {\n            console.log(\"deposite\", e.target.name)\n            const name = e.target.name;\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            // if (name === 'planone') {\n            let rewards = await contract.methods.Rewards()\n                .send({\n                    from: account\n                })\n                .then(async (output) => {\n                    toast.success(\"Transaction Completed\");\n                }).catch((e) => {\n                    console.log(\"response\", e);\n                    toast.error(e.message);\n                });\n            // } \n        } catch (error) {\n            console.log(\"response\", error);\n            // alert(\"Error while checking locked account\");\n        }\n    };\n\n// For amount 1\nconst enter1AmountCall = async (e) => {\n    const web3 = window.web3;\n    // await set1EnterAmount(e.target.value);\n    let tokenContract = new web3.eth.Contract(tokenAbi, tokenAddres);\n    let Accountinfo =await tokenContract.methods.allowance(account,contractAddress)\n    .call();\n     let finalAmount =await web3.utils.fromWei(Accountinfo) \n    //  console.log(\"Final Amount\", finalAmount)\n    // console.log(\"Amount1\",enterAmount1);\n    console.log(parseFloat(e.target.value)<parseFloat(finalAmount));\n    let valueEntered=e.target.value;\n     if (parseFloat(valueEntered)<=parseFloat(finalAmount))\n    {\n        console.log(\"called\");\n        setDisable(true);\n        console.log(\"Account info\",finalAmount)\n    }\n    else{\n        setDisable(false)\n    }\n    try {\n        const name = e.target.name;\n        // console.log(\"name\", name);\n        const web3 = window.web3;\n        let contract = new web3.eth.Contract(abi, contractAddress);\n        if (name === 'first_input') {\n            let valueEntered=e.target.value;\n            let value = e.target.value\n            console.log(\"here\",value);\n             await set1EnterAmount(value);\n             console.log(\"Amount 1 = \",enterAmount1)\n            let check_reward = await contract.methods.getResult(days1, web3.utils.toWei(e.target.value)).call();\n            // console.log(\"check_reward\", check_reward.profit)\n            set1withdrawAble(formatThousands(web3.utils.fromWei(check_reward.profit)));\n        }\n    } catch (error) {\n        console.log(\"Error while checking locked account\", error);\n    }\n};\n// For Amount 2\n\nconst enter2AmountCall = async (e) => {\nconst web3 = window.web3;\n// await set1EnterAmount(e.target.value);\nlet tokenContract = new web3.eth.Contract(tokenAbi, tokenAddres);\nlet Accountinfo =await tokenContract.methods.allowance(account,contractAddress)\n.call();\n let finalAmount =await web3.utils.fromWei(Accountinfo) \n//  console.log(\"Final Amount\", finalAmount)\n// console.log(\"Amount1\",enterAmount1);\nconsole.log(parseFloat(e.target.value)<parseFloat(finalAmount));\nlet valueEntered=e.target.value;\n if (parseFloat(valueEntered)<=parseFloat(finalAmount))\n{\n    console.log(\"called\");\n    setDisable1(true);\n    console.log(\"Account info\",finalAmount)\n}\nelse{\n    setDisable1(false)\n}\ntry {\n    const name = e.target.name;\n    // console.log(\"name\", name);\n    const web3 = window.web3;\n    let contract = new web3.eth.Contract(abi, contractAddress);\n    if (name === 'second_input') {\n        let value = e.target.value\n        console.log(\"Amount2\",value);\n         await set2EnterAmount(value);\n         console.log(\"Amount 2 = \",enterAmount2)\n        let check_reward = await contract.methods.getResult(days1, web3.utils.toWei(e.target.value)).call();\n        // console.log(\"check_reward\", check_reward.profit)\n        set2withdrawAble(formatThousands(web3.utils.fromWei(check_reward.profit)));\n    } \n} catch (error) {\n    console.log(\"Error while checking locked account\", error);\n}\n};\n// For Amount 3\n\nconst enter3AmountCall = async (e) => {\nconst web3 = window.web3;\n// await set1EnterAmount(e.target.value);\nlet tokenContract = new web3.eth.Contract(tokenAbi, tokenAddres);\nlet Accountinfo =await tokenContract.methods.allowance(account,contractAddress)\n.call();\n let finalAmount =await web3.utils.fromWei(Accountinfo) \n//  console.log(\"Final Amount\", finalAmount)\n// console.log(\"Amount1\",enterAmount1);\nconsole.log(parseFloat(e.target.value)<parseFloat(finalAmount));\nlet valueEntered=e.target.value;\n if (parseFloat(valueEntered)<=parseFloat(finalAmount))\n{\n    console.log(\"called\");\n    setDisable2(true);\n    console.log(\"Account info\",finalAmount)\n}\nelse{\n    setDisable2(false)\n}\ntry {\n    const name = e.target.name;\n    // console.log(\"name\", name);\n    const web3 = window.web3;\n    let contract = new web3.eth.Contract(abi, contractAddress);\n    if (name === 'third_input') {\n        let valueEntered=e.target.value;\n        let value = e.target.value\n        console.log(\"Amount 3\",value);\n         await set3EnterAmount(value);\n         console.log(\"Amount 3 = \",enterAmount3)\n        let check_reward = await contract.methods.getResult(days1, web3.utils.toWei(e.target.value)).call();\n        // console.log(\"check_reward\", check_reward.profit)\n        set3withdrawAble(formatThousands(web3.utils.fromWei(check_reward.profit)));\n    }\n} catch (error) {\n    console.log(\"Error while checking locked account\", error);\n}\n};\nfunction formatThousands(num) {\n        var numbr = parseFloat(parseFloat(num).toFixed(2));\n        // console.log(\"num\", parseFloat(numbr));\n        var values = numbr.toString().split(\".\");\n        return (\n            values[0].replace(/.(?=(?:.{3})+$)/g, \"$&,\") +\n            (values.length == 2 ? \".\" + values[1] : \"\")\n        );\n    }\n\n    const loadWeb3 = async () => {\n        let isConnected = false;\n        try {\n            if (window.ethereum) {\n                window.web3 = new Web3(window.ethereum);\n                await window.ethereum.enable();\n                isConnected = true;\n            } else if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n                isConnected = true;\n            } else {\n                isConnected = false;\n                console.log(\"Metamask is not installed, please install it on your browser to connect.\");\n                // alert(\"Metamask is not installed, please install it on your browser to connect.\");\n            }\n            if (isConnected === true) {\n                let accounts = await getAccounts();\n                // setAccount(accounts[0]);\n                accountAd = accounts[0];\n                setAccount(accountAd);\n                let accountDetails = null;\n                window.ethereum.on(\"accountsChanged\", function (accounts) {\n                    // setAccount(accounts[0]);\n                    accountAd = accounts[0];\n                    setAccount(accountAd);\n                    // console.log(accounts);\n                });\n            }\n            // getData();\n        } catch (error) {\n            console.log(\"Error while connecting metamask\", error);\n            // alert(\"Error while connecting metamask\");\n        }\n    };\n\n    const getAccounts = async () => {\n        const web3 = window.web3;\n        try {\n            let accounts = await web3.eth.getAccounts();\n            // console.log(accounts);\n            return accounts;\n        } catch (error) {\n            console.log(\"Error while fetching acounts: \", error);\n            return null;\n        }\n    };\n\n    // eslint-disable-next-line\n    const isLockedAccount = async () => {\n        try {\n            let accounts = await getAccounts();\n            if (accounts.length > 0) {\n                // console.log(\"Metamask is unlocked\");\n            } else {\n                console.log(\"Metamask is locked\");\n            }\n        } catch (error) {\n            // alert(\"Error while checking locked account\");\n        }\n    };\n\n    useEffect(() => {\n        setInterval(() => {\n            loadWeb3();\n        }, 2000);\n    }, []);\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-4\">\n                        <div className=\"bannerendcard2\">\n                            <div className=\"col-md-12\" id=\"plan1\">\n                                <span>Plan D</span>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Daily Profit</span>\n                                    <span className=\"bannerendvalue\">{dailyProfit1}%</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Total Return</span>\n                                    <span className=\"bannerendvalue\">{totalReturn1}%</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Withdrawn Time</span>\n                                    <span className=\"bannerendvalue\">Any Time</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Days</span>\n                                    <span className=\"bannerendvalue\">21</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Enter Amount</span>\n                                    {/* <span className=\"bannerendvalue\">0%</span> */}\n                                    <input\n                                        name=\"first_input\"\n                                        className=\"stakeinput form-control mx-3\" placeholder=\"0\" type=\"Number\"\n                                        onChange={enter1AmountCall}\n                                    />\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">In 14 days you will get</span>\n                                    <span className=\"bannerendvalue1 py-2\">{withdrawnAble1}</span>\n                                </div>\n                            </div>\n                            <div class=\"d-grid gap-2\">\n                                {/* <div className=\"row\">\n                                    <div className=\"col-sm\">\n                                        <button type=\"button\" className=\"btn btn-grad\" id=\"ImageColor\"\n                                            name=\"planone\"\n                                            onClick={Deposite}>\n                                            Knight Doge\n                                        </button>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <button type=\"button\" className=\"btn btn-grad\" id=\"ImageColor\"\n                                            // name=\"planone\"\n                                            onClick={unstake}>\n                                            Claim HUTT\n                                        </button>\n                                    </div>\n                                </div> */}\n                                <button type=\"button\" disabled={disable} className=\"btn btn-gradd btn-block \"\n                                    name=\"planone\"\n                                    onClick={DepositPlan1}>\n                                    Approve\n                                </button>\n                                <button type=\"button\" disabled={!disable} className=\"btn btn-gradd btn-block\"\n                                    name=\"planone\"\n                                    onClick={Invest}>\n                                    Invest\n                                </button>\n                                {/* <span className=\"bannerendnote\">* plan use capitalization of interest</span> */}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                        <div className=\"bannerendcard2\">\n                            <div className=\"col-md-12\" id=\"plan1\">\n                                <span>Plan E</span>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Daily Profit</span>\n                                    <span className=\"bannerendvalue\">{dailyProfit2}%</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Total Return</span>\n                                    <span className=\"bannerendvalue\">{totalReturn2}%</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Withdrawn Time</span>\n                                    <span className=\"bannerendvalue\">Any Time</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Days</span>\n                                    <span className=\"bannerendvalue\">44</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Enter Amount</span>\n                                    {/* <span className=\"bannerendvalue\">0%</span> */}\n                                    <input\n                                        name=\"second_input\"\n                                        className=\"stakeinput form-control mx-3\" placeholder=\"0\" type=\"Number\"\n                                        onChange={enter2AmountCall}\n                                    />\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">In 21 days you will get</span>\n                                    <span className=\"bannerendvalue1 py-2\">{withdrawnAble2}</span>\n                                </div>\n                            </div>\n                            <div class=\"d-grid gap-2\">\n                                {/* <div className=\"row\">\n                                    <div className=\"col-sm\">\n                                        <button type=\"button\" className=\"btn btn-grad\" id=\"ImageColor\"\n                                            name=\"plantwo\"\n                                            onClick={Deposite}>\n                                            Knight Doge\n                                        </button>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <button type=\"button\" className=\"btn btn-grad\" id=\"ImageColor\"\n                                            // name=\"plantwo\"\n                                            onClick={unstake}>\n                                            Claim HUTT\n                                        </button>\n                                    </div>\n                                </div> */}\n                               <button type=\"button\" disabled={disable1} className=\"btn btn-gradd btn-block \"\n                                    name=\"planone\"\n                                    onClick={DepositPlan2}>\n                                    Approve\n                                </button>\n                                <button type=\"button\" disabled={!disable1} className=\"btn btn-gradd btn-block\"\n                                    name=\"planone\"\n                                    onClick={Invest}>\n                                    Invest\n                                </button>\n                                {/* <span className=\"bannerendnote\">* plan use capitalization of interest</span> */}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                        <div className=\"bannerendcard2\">\n                            <div className=\"col-md-12\" id=\"plan1\">\n                                <span>Plan F</span>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Daily Profit</span>\n                                    <span className=\"bannerendvalue\">{dailyProfit3}%</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Total Return</span>\n                                    <span className=\"bannerendvalue\">{totalReturn3}%</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Withdrawn Time</span>\n                                    <span className=\"bannerendvalue\">Any Time</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Days</span>\n                                    <span className=\"bannerendvalue\">60</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Enter Amount</span>\n                                    {/* <span className=\"bannerendvalue\">0%</span> */}\n                                    <input\n                                        name=\"third_input\"\n                                        className=\"stakeinput btn-secondary form-control  mx-3\" placeholder=\"0\" type=\"Number\"\n                                        onChange={enter3AmountCall}\n                                    />\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">In 28 days you will get</span>\n                                    <span className=\"bannerendvalue1 py-2\">{withdrawnAble3}</span>\n                                </div>\n                            </div>\n                            <div class=\"d-grid gap-2\">\n                                {/* <div className=\"row\">\n                                    <div className=\"col-sm\">\n                                        <button type=\"button\" className=\"btn btn-grad\" id=\"ImageColor\"\n                                            name=\"planthree\"\n                                            onClick={Deposite}>\n                                            Knight Doge\n                                        </button>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <button type=\"button\" className=\"btn btn-grad\" id=\"ImageColor\"\n                                            // name=\"planthree\"\n                                            onClick={unstake}>\n                                            Claim HUTT\n                                        </button>\n                                    </div>\n                                </div> */}\n                                <button type=\"button\" disabled={disable2} className=\"btn btn-gradd btn-block \"\n                                    name=\"planone\"\n                                    onClick={DepositPlan3}>\n                                    Approve\n                                </button>\n                                <button type=\"button\" disabled={!disable2} className=\"btn btn-gradd btn-block\"\n                                    name=\"planone\"\n                                    onClick={Invest}>\n                                    Invest\n                                </button>\n                                {/* <span className=\"bannerendnote\">* plan use capitalization of interest</span> */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <span className=\"bannerendnwarnings\">\n                        1. Important: Plans return are float and Daily Profit for a new deposit will increase by different Percentage\n                    </span>\n                    <span className=\"bannerendnwarnings\">\n                        2. Minimum deposit amount is 1 Knight Doge and you can have multiple deposits\n                    </span>\n                    <span className=\"bannerendnwarnings\">\n                        3. Earnings every moment, withdraw instantly any time\n                    </span>\n                </div>\n            </div>\n        </div >\n    );\n}\n\nexport default BannerEndPlan;\n","import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport {\n    contractAddress,\n    abi,\n    tokenAddres,\n    tokenAbi\n} from \"../../../utils/constant\";\nimport './myaccount.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\n// import logo from \"../../asset/images/logo.png\";\nimport logo from \"../../../asset/images/logo.png\";\nimport menuIcon from \"../../../asset/images/menuIcon.png\";\nimport { Container } from \"react-bootstrap\";\nfunction Myaccount() {\n\n    let accountAd;\n    const [account, setAccount] = useState(\"Connect\");\n    const [showLinks, setShowLinks] = useState(false);\n    const [dailyProfit, setdailyProfit] = useState(0);\n    const [totalReturn, setTotalReturn] = useState(0);\n    const [withdrawTime, setWithdrawTime] = useState(0);\n    const [enterAmount, setEnterAmount] = useState(0);\n    const [uplineearb, setuplineearn] = useState(0);\n    const [days, setdays] = useState(0);\n    const [WithdrawAbleReward, setWithdrawAbleReward] = useState(0);\n    const [referralReward, SetReferralReward] = useState(0);\n    const [userstaked, setuserstaked] = useState(0);\n    const [numberodreferral, setnumberodreferral] = useState(0)\n\n    const [withdrawamount, setwithdrawamount] = useState(0);\n\n    const getData = async () => {\n        try {\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            // console.log(\"data\", web3);\n            // let totalupline = await contract.methods.Total_Upline_Earned().call();\n            // setuplineearn(totalupline);\n\n            let uplinereward = await contract.methods.getUserAvailable(accountAd).call();\n            // SetReferralReward(uplinereward.upline_Reward);\n            setWithdrawAbleReward(formatThousands(web3.utils.fromWei(uplinereward)));\n            uplinereward = await contract.methods.getUserTotalDeposits(accountAd).call();\n            setuserstaked(web3.utils.fromWei(uplinereward));\n            // setnumberodreferral(uplinereward.referrals)\n\n        } catch (error) {\n            console.log(\"Error while checking locked account\", error);\n        }\n    };\n    function formatThousands(num) {\n        var numbr = parseFloat(parseFloat(num).toFixed(6));\n        // console.log(\"num\", parseFloat(numbr));\n        var values = numbr.toString().split(\".\");\n        return (\n            values[0].replace(/.(?=(?:.{3})+$)/g, \"$&,\") +\n            (values.length == 2 ? \".\" + values[1] : \"\")\n        );\n    }\n    const loadWeb3 = async () => {\n        let isConnected = false;\n        try {\n            if (window.ethereum) {\n                window.web3 = new Web3(window.ethereum);\n                await window.ethereum.enable();\n                isConnected = true;\n            } else if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n                isConnected = true;\n            } else {\n                isConnected = false;\n                console.log(\"Metamask is not installed, please install it on your browser to connect.\");\n                // toast(\"Metamask is not installed, please install it on your browser to connect.\");\n            }\n            if (isConnected === true) {\n                let accounts = await getAccounts();\n                // setAccount(accounts[0]);\n                accountAd = accounts[0];\n                setAccount(accountAd);\n                let accountDetails = null;\n                window.ethereum.on(\"accountsChanged\", function (accounts) {\n                    // setAccount(accounts[0]);\n                    accountAd = accounts[0];\n                    setAccount(accountAd);\n                    // console.log(accounts);\n                });\n            }\n            getData();\n        } catch (error) {\n            console.log(\"Error while connecting metamask\", error);\n            // alert(\"Error while connecting metamask\");\n        }\n    };\n    const getAccounts = async () => {\n        const web3 = window.web3;\n        try {\n            let accounts = await web3.eth.getAccounts();\n            // console.log(accounts);\n            return accounts;\n        } catch (error) {\n            console.log(\"Error while fetching acounts: \", error);\n            return null;\n        }\n    };\n    const enterAmountCall = async (e) => {\n        try {\n            setwithdrawamount(e.target.value);\n        } catch (error) {\n            console.log(\"Error while checking locked account\");\n        }\n    };\n    const WithdrawReward = async () => {\n        try {\n           if(WithdrawAbleReward>0){\n\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            // console.log(\"withdrawamount\", withdrawamount);\n            // if (WithdrawAbleReward > 0 && withdrawamount >= 10) {\n            let uplinereward = await contract.methods.withdraw()\n                .send({\n                    from: account\n                })\n                .then(async (output) => {\n                    toast.success(\"Transaction Completed\");\n                }).catch((e) => {\n                    // console.log(\"response\", e);\n                    toast.error(e.message);\n                });\n            }\n            else if (WithdrawAbleReward<=0) {\n                toast(\"Please recharge!! Your Balance is 0 or less than 0\");\n\n            }\n            // } else {\n            //     toast(\"You do not Have sufficient balance to withdraw\");\n            // console.log(\"withdrawamount\", \"You do not Have sufficient balance to withdraw\")\n            // }\n        } catch (error) {\n            console.log(\"Error while fetching acounts: \", error);\n        }\n    };\n\n\n    // eslint-disable-next-line\n    const isLockedAccount = async () => {\n        try {\n            let accounts = await getAccounts();\n            if (accounts.length > 0) {\n                // console.log(\"Metamask is unlocked\");\n            } else {\n                // console.log(\"Metamask is locked\");\n            }\n        } catch (error) {\n            console.log(\"Error while checking locked account\");\n        }\n    };\n    function copyToClipboard(e) {\n        try {\n            let get = document.getElementById(\"textAreaRef\").select();\n            document.execCommand('copy');\n            e.target.focus();\n            toast.success('copied!');\n        } catch (error) {\n            console.log(\"Error while fetching acounts: \", error);\n        }\n    };\n\n    useEffect(() => {\n        setInterval(() => {\n            loadWeb3();\n        }, 1000);\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-sm-4\">\n                    <div className=\"mystaked\">\n                        <div className=\"row\">\n                            <span className=\"mystakedtext\">Withdrawable Reward12</span>\n                            <span className=\"mystakedvalue\">{WithdrawAbleReward}</span>\n                            <span className=\"mystakedtext\">User Total Deposit</span>\n                            <span className=\"mystakedvalue\">{userstaked}</span>\n                            {/* <input className=\"stakeinput\" onChange={enterAmountCall} /> */}\n                            <button className=\"btn btn-warning\"\n                                onClick={WithdrawReward}>\n                                Withdraw\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"row\" style={{ color: \"white\" }}>\n                        <h1>Your Stake</h1>\n                    </div>\n                </div>\n                <div className=\"col-sm-8\">\n                    <div className=\"myrefferaltable\">\n                        <span className=\"refferaltext\">Your Referral Link</span>\n                        <div className=\"row\">\n                            <div className=\"col-sm-10\">\n                                <input placeholder=\"Please connect to your wallet\"\n                                    value={`${window.location.protocol}//${window.location.host\n                                        }/login?ref=${account}`}\n                                />\n                            </div>\n                            <div className=\"col-sm-2\">\n                                <button className=\"copy\"\n                                    id=\"textAreaRef\"\n                                    onClick={copyToClipboard}\n                                >copy</button>\n                            </div>\n                        </div>\n                        {/* <div className=\"row\">\n                            <div className=\"col-4\">\n                                <span className=\"refferaltext\">Total Referral Earned</span>\n                                <span className=\"refferalvalue\">{referralReward}</span>\n                            </div>\n                            <div className=\"col-4\">\n                                <span className=\"refferaltext\">Total Referral Withdrawn</span>\n                                <span className=\"refferalvalue\">0</span>\n                            </div>\n                            <div className=\"col-4\">\n                                <span className=\"refferaltext\">Invited Users by You</span>\n                                <span className=\"refferalvalue\">{numberodreferral}</span>\n                            </div>\n                        </div> */}\n                        <div className=\"row\" style={{\n                            padding: \"10px 0px\"\n                        }}>\n                            <div className=\"col\">\n                                <p>Earn for promotion BNBstake</p>\n                                <p>You will receive:</p>\n                                <p>5% from each level 1 referral depositss</p>\n                                <p>2.5% from each level 2 referral deposits</p>\n                                <p>0.5% from each level 3 referral deposits</p>\n                                <p>Note! You need to have at least 1 deposit to start receive earnings</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Myaccount;\n","export default __webpack_public_path__ + \"static/media/footer.ca581494.png\";","import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport {\n    contractAddress,\n} from \"../../../utils/constant\";\nimport './sponsor.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\n// import logo from \"../../asset/images/logo.png\";\n// import logo from \"../../asset/images/s1.png\";\n// import logo2 from \"../../asset/images/s2.png\";\n// import logo3 from \"../../asset/images/s3.png\";\n// import logo4 from \"../../asset/images/s4.png\";\nimport footer from './footer.png'\nimport menuIcon from \"../../../asset/images/menuIcon.png\";\nimport { Container } from \"react-bootstrap\";\nfunction Sponsor() {\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h1 className=\"sponsors\">SPONSORS</h1>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm\">\n                        <img className=\"sponsor-image\" src={footer} alt=\"sposor\" />\n                    </div>\n                    {/* <div className=\"col-sm\">\n                        <img src={logo2} alt=\"sposor\" />\n                    </div>\n                    <div className=\"col-sm\">\n                        <img src={logo3} alt=\"sposor\" />\n                    </div>\n                    <div className=\"col-sm\">\n                        <img src={logo4} alt=\"sposor\" />\n                    </div> */}\n                </div>\n            </div>\n        </div >\n    );\n}\n\nexport default Sponsor;\n","export default __webpack_public_path__ + \"static/media/pdf.fdc83be7.pdf\";","import React, { useState, useEffect } from \"react\";\nimport './footer.css';\nimport Pdf from '../../../asset/images/pdf.pdf';\nimport logo1 from '../../../asset/images/staehutt.png';\nfunction Footer\n    () {\n\n\n    return (\n        // <div className=\"container-fluid\">\n        <div className=\"container\">\n            <div className=\"footer\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <img className=\"logo\" src={logo1} alt=\"Logo\" class={{width: \"75px\", height: \"75px\" }}/>\n                </div>\n                <div className=\"col\">\n                    <h6>Powered by</h6>\n                    <a href=\"https://www.binance.org/en/smartChain\"> Binance Smart Chain</a>\n                </div>\n                <div className=\"col\">\n                    <h6> Audited by HazeCrypto </h6>\n                    <a href={Pdf} target=\"_blank\"> Download Audit PDF Report </a>\n                </div>\n                <div className=\"col\">\n                    <h6> © 2021 All rights reserved. </h6>\n                    <a href=\"#\"> https://sthstake.pro </a>\n                </div>\n                </div>\n            </div>\n        </div>\n        // </div >\n    );\n}\n\nexport default Footer\n    ;\n","\nimport '../App.css';\n// import Navbar from '../components/locking/navbar/navbar';\nimport Info from '../components/locking/info/info';\nimport Banner from '../components/locking/banner/banner';\nimport BannerEndPlan from '../components/locking/banner2/bannerendplan';\nimport Myaccount from '../components/locking/myaccount/myaccount';\nimport Sponsor from '../components/locking/sponsors/sponsor';\nimport Footer from '../components/locking/footer/footer';\nimport Header from '../components/locking/header/header';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n\nimport { ToastContainer, toast } from 'react-toastify';\nfunction Index() {\n    return (\n        <div >\n            <ToastContainer />\n            {/* <Navbar /> */}\n            <Info />\n\n            <Banner />\n            <BannerEndPlan />\n            <Myaccount />\n            <Sponsor />\n            <Footer />\n        </div>\n    );\n}\n\nexport default Index;\n","export default __webpack_public_path__ + \"static/media/blk1.42a96be5.png\";","export default __webpack_public_path__ + \"static/media/Golden.8d0794b3.png\";","export default __webpack_public_path__ + \"static/media/giff.9cc8341c.gif\";","export default __webpack_public_path__ + \"static/media/detail.0dbd4434.png\";","export default __webpack_public_path__ + \"static/media/gfx.1d6af920.png\";","\nimport './home.css';\nimport Particles from 'react-particles-js';\nimport logo from \"../asset/images/Golden.png\";\n\nimport blk from \"../asset/images/blk1.png\";\n// import blk13 from \"../asset/images/staking.png\";\nimport blk13 from \"../asset/images/giff.gif\";\nimport blk14 from \"../asset/images/detail.png\";\nimport gfx from \"../asset/images/gfx.png\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link, useHistory\n} from \"react-router-dom\";\n\nfunction Home() {\n\n    let history = useHistory();\n\n    function handleClick() {\n        history.push(\"/without\");\n    }\n    return (\n        <div className=\"container-fluid\">\n            <Particles\n                style={{\n                    position: \"absolute\", position: 'absolute', left: '0px',\n                    zIndex: '0'\n                }}\n                height='300%'\n                width=\"100%\"\n                params={{\n                    particles: {\n                        color: { value: \"#ffffff\" },\n                        line_linked: { color: { value: \"#fff000\" } },\n                        number: { value: 100 },\n                        size: { value: 3 }\n                    }\n                }}\n            >\n            </Particles>\n            <div className='container headerDiv '>\n                <div className=\"row\">\n                    <div className=\"col-md-6\"\n                        style={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            justifyContent: \"center\",\n                            margin: \"3rem 0px 2rem\",\n                        }}\n                    >\n                        <h1 className=\"btechhead\">\n                            WHAT IS KNIGHTDOGE PLATFORM\n                        </h1>\n                        <p className=\"paragraph\">\n                            Knight Doge is the cryptocurrency of modern e-commerce platforms and potentially the greatest social network of all. Knight Doge is a Fly token built on Binance Smart Chain – BSC. The primary benefit of this staking hutt is that you earn more crypto, and interest rates can be very generous. IN KNIGHTDOGE staking policy there are 6 unlocking plans. In some plans, you can earn more than 100% per month. It's potentially a very profitable way to invest your money. And, the only thing you need is crypto that uses the proof-of-stake model. You can use Staking Reward's calculator to estimate your monthly earnings.\n                        </p>\n                        {/* <button onClick={handleClick}\n                            type=\"button\"\n                        >\n                            get started */}\n                        {/* <a> */}\n                        {/* <Link to=\"/without\">Without Locking</Link> */}\n                        {/* </a> */}\n                        {/* </button> */}\n                    </div>\n                    <div className=\"col-md-6\">\n                        {/* <img src={logo} alt=\"logo\" /> */}\n                        <div><img src={gfx} className=\"main-img\" /></div>\n                    </div>\n                </div>\n            </div>\n\n            <div className='container'>\n\n                <div className=\"row\">\n                    <div className=\"col btechhead\">\n                        Blockchain Technology\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\" style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        margin: \"3rem 0px 2rem\",\n                    }}>\n                        <p className=\"paragraph\">\n                            <h1> Blockchain / Distributed Ledger Technology </h1>\n                        </p>\n                        <p className=\"paragraph\">\n                            Distributed ledger technology is a digital system that records asset transactions at numerous places simultaneously.\n                        </p>\n                        <p className=\"paragraph\">\n                            Distributed ledger technology usually comes with restrictions on its access and use.\n                            {/* </p>\n                        <p className=\"paragraph\"> */}\n                            It is called a permissioned technology.\n                        </p>\n                        <p className=\"paragraph\">\n                            It creates ledgers in a decentralized way to obtain consensus from all the participants.\n                        </p>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <img className=\"main-img\" src={blk} />\n                    </div>\n                </div>\n            </div>\n            <div className='container'>\n                <div className=\"row\">\n                    <div className=\"col btechhead\">\n                        Why Blockchain Technology is important?\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-md-3\">\n                        <h1 className=\"heading\">IMMUTABILITY</h1>\n                        <p className=\"paragraph\">\n                            Blockchain is immutable. This opens a lot of opportunities for platforms that need immutable traits to make their system more functional in a highly competitive market.\n                        </p>\n                    </div>\n                    <div className=\"col-md-3 offset-md-3\">\n                        <h1 className=\"heading\">TRANSPARENCY</h1>\n                        <p className=\"paragraph\">\n                            Public blockchain provides transparency due to its nature.\n                            It is very useful for different functions of our society, including doing elections. Companies can also utilize it to ensure that the end-user can interact with the processes with full or partial transparency.\n                        </p>\n                    </div>\n                    <div className=\"col-md-3  offset-md-3\">\n                        <h1 className=\"heading\">DIGITAL FREEDOM</h1>\n                        <p className=\"paragraph\">\n                            With blockchain, you get true digital freedom. You are your own bank.\n                            You can take out your money when you want and do it without anyone else authorization. It gives you the digital freedom that relies heavily on the backbone of blockchain technology.\n                        </p>\n                    </div>\n                    <div className=\"col-md-3  offset-md-3\">\n                        <h1 className=\"heading\">IMMUTABILITY</h1>\n                        <p className=\"paragraph\">\n                            Decentralized services are the backbone of our futuristic society.\n                            Be it asset management or energy management; there will be decentralized services for every sector out there. This will give people unprecedented access to the options that are currently not available in the market. Almost every sector will have decentralized services.\n                        </p>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h1 className=\"btechhead\">KNIGHTDOGE Platform </h1>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\"\n                        style={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            justifyContent: \"center\",\n                            margin: \"3rem 0px 2rem\",\n                        }}\n                    >\n                        <h1 className=\"heading\"> Knight Doge Overview </h1>\n                        <p className=\"paragraph\">\n                            Combining the industry-recognized domain knowledge in big data together with artificial intelligence and reforming it into a Staking software platform, KNIGHTDOGE Technology is the pioneer in automated data Staking algorithm to transform traditional and emerging industries.\n                        </p>\n                        <p className=\"paragraph\">\n                            With overwhelming popularity of leveraging on data to optimize data-driven decisions, KNIGHTDOGE takes advantage of the benefits of its propriety algorithm and opens limitless opportunities for cryptocurrency investors to benefit from the market.\n                        </p>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <img className=\"main-img\" src={blk13} />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h1 className=\"btechhead\">    KNIGHTDOGE Plans </h1>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        The Future of Automated Staking Platform\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <img className=\"main-img\" src={blk14} />\n                    </div>\n                    <div className=\"col-md-6\"\n                        style={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            justifyContent: \"center\",\n                            margin: \"3rem 0px 2rem\",\n                        }}\n                    >\n                        <div className=\"paragraph-li\">\n                            <p className=\"paragraph\"> <i class=\"fa fa-cart-plus fa-2x paragraph-icon\"></i> Guaranteed Profits</p>\n                        </div>\n                        <div className=\"paragraph-li\">\n                            <p className=\"paragraph\"> <i class=\"fa fa-calendar fa-2x paragraph-icon\"></i> Able to operate 24/7 with high speed auto-Staking.</p>\n                        </div>\n                        <div className=\"paragraph-li\">\n                            <p className=\"paragraph\"> <i class=\"fa fa-exchange fa-2x paragraph-icon\"></i> All transactions take place in 1 exchange</p>\n                        </div>\n                        <div className=\"paragraph-li\">\n                            <p className=\"paragraph\"> <i class=\"fa fa-globe fa-2x paragraph-icon\"></i>\n                                No transfer time required; less liquidity tied up.</p>\n                        </div>\n                        <div className=\"paragraph-li\">\n                            <p className=\"paragraph\"> <i class=\"fa fa-tasks fa-2x paragraph-icon\"></i> More markets to arbitrage</p>\n                        </div>\n                        <div className=\"paragraph-li\">\n                            <p className=\"paragraph\"><i class=\"fa fa-camera-retro fa-2x paragraph-icon\"></i>\n                                High level of concurrency</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {/* <div className=\"col-sm-3\">\n\n                    </div>\n                    <div className=\"col-sm-3\">\n\n                    </div> */}\n                    <div className=\"col-sm-4 offset-sm-4\" id=\"contacts\">\n                        <a href=\"https://twitter.com/StakingHutt\" target=\"_blank\"\n                        >\n                            <button type=\"button\" class=\"btn btn-outline-warning\">\n                                <i class=\"fab fa-twitter\" style={{\n                                    margin: \"2px\"\n                                }}\n                                ></i>\n                                Twitter\n\n                            </button>\n\n                        </a>\n                        <a href=\"https://t.me/StakeHuttOfficial\" target=\"_blank\"\n                        >\n                            <button type=\"button\" class=\"btn btn-outline-warning\">\n                                <i class=\"fab fa-telegram\"\n                                    style={{\n                                        margin: \"2px\"\n                                    }}></i>\n                                Telegram</button>\n                        </a>\n                        <a href=\"https://medium.com/@StakingHutt\" target=\"_blank\"\n                        >\n                            <button type=\"button\" class=\"btn btn-outline-warning\">\n                                <i class=\"fab fa-medium\"\n                                    style={{\n                                        margin: \"2px\"\n                                    }}></i>\n                                Medium</button>\n                        </a>\n                    </div>\n                </div>\n                <div className=\"row\">\n\n                </div>\n            </div>\n            {/* <br /><br /><br /> */}\n            <br /><br />\n\n        </div >\n\n    );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport {\n    contractAddress,\n    abi,\n    tokenAddres,\n    tokenAbi\n} from \"../../../utils/constant\";\nimport './info.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\n// import logo from \"../../asset/images/logo.png\";\nimport logo from \"../../../asset/images/logo.png\";\nimport menuIcon from \"../../../asset/images/menuIcon.png\";\nimport { Container } from \"react-bootstrap\";\nimport Badge from 'react-bootstrap/Button';\nfunction Info() {\n\n    let accountAd;\n    const [account, setAccount] = useState(\"Connect\");\n    const [showLinks, setShowLinks] = useState(false);\n    const [dailyProfit, setdailyProfit] = useState(0);\n    const [totalReturn, setTotalReturn] = useState(0);\n    const [withdrawTime, setWithdrawTime] = useState(0);\n    const [enterAmount, setEnterAmount] = useState(0);\n    const [fourteenDaysReward, setfourteenDaysReward] = useState(0);\n    const [days, setdays] = useState(0);\n    const [contractBalance, setcontractBalance] = useState(0);\n    const [totalusers, setTotalUsers] = useState(0);\n\n    const getData = async () => {\n        try {\n            const web3 = window.web3;\n            let tokenContract = new web3.eth.Contract(tokenAbi, tokenAddres);\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            // console.log(\"data\", web3);\n            let accountDetails = await tokenContract.methods.balanceOf(contractAddress).call();\n            setcontractBalance(web3.utils.fromWei(accountDetails));\n            // total_users\n            let total_users = await contract.methods.total_users().call();\n            console.log(\"total_users\", total_users);\n            setTotalUsers(total_users);\n        } catch (error) {\n            console.log(\"data\", error);\n            // alert(\"Error while checking locked account\");\n        }\n    };\n    function formatThousands(num) {\n        var numbr = parseFloat(parseFloat(num).toFixed(6));\n        // console.log(\"num\", parseFloat(numbr));\n        var values = numbr.toString().split(\".\");\n        return (\n            values[0].replace(/.(?=(?:.{3})+$)/g, \"$&,\") +\n            (values.length == 2 ? \".\" + values[1] : \"\")\n        );\n    }\n\n    const loadWeb3 = async () => {\n        let isConnected = false;\n        try {\n            if (window.ethereum) {\n                window.web3 = new Web3(window.ethereum);\n                await window.ethereum.enable();\n                isConnected = true;\n            } else if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n                isConnected = true;\n            } else {\n                isConnected = false;\n                console.log(\"Metamask is not installed, please install it on your browser to connect.\");\n                // alert(\"Metamask is not installed, please install it on your browser to connect.\");\n            }\n            if (isConnected === true) {\n                let accounts = await getAccounts();\n                // setAccount(accounts[0]);\n                accountAd = accounts[0];\n                setAccount(accountAd);\n                let accountDetails = null;\n                window.ethereum.on(\"accountsChanged\", function (accounts) {\n                    // setAccount(accounts[0]);\n                    accountAd = accounts[0];\n                    setAccount(accountAd);\n                    // console.log(accounts);\n                });\n            }\n            getData();\n        } catch (error) {\n            console.log(\"Error while connecting metamask\", error);\n            // alert(\"Error while connecting metamask\");\n        }\n    };\n\n\n    const getAccounts = async () => {\n        const web3 = window.web3;\n        try {\n            let accounts = await web3.eth.getAccounts();\n            // console.log(accounts);\n            return accounts;\n        } catch (error) {\n            console.log(\"Error while fetching acounts: \", error);\n            return null;\n        }\n    };\n\n    // eslint-disable-next-line\n    const isLockedAccount = async () => {\n        try {\n            let accounts = await getAccounts();\n            if (accounts.length > 0) {\n                // console.log(\"Metamask is unlocked\");\n            } else {\n                console.log(\"Metamask is locked\");\n            }\n        } catch (error) {\n            // alert(\"Error while checking locked account\");\n        }\n    };\n\n    useEffect(() => {\n        setInterval(() => {\n            loadWeb3();\n        }, 1000);\n    }, []);\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-8\">\n                        <div className=\"info\">\n                            <p>Total income: based on your tarrif plan<span> (from 5% to 8% daily)</span></p>\n                            <p>Basic interest rate:<span> +0.5% every 24 hours</span> - only for new deposits</p>\n                            <p>Minimal deposit: <span>0.05 STH</span>, no maximal limit</p>\n                            <p>Earnings <span>every moment</span>, withdraw <span>any time </span>(if you use capitalization of interest you can withdraw only after end of your deposit)</p>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                        <span className=\"infostaked\">Total Users\n                            <a\n                                href={`https://testnet.bscscan.com/${contractAddress}`}\n                                target=\"_blank\"\n                                className='badge' bg=\"light\" text=\"dark\">\n                                contract\n                            </a>\n                        </span>\n                        <span className=\"infostakedvalue\">{totalusers}</span>\n                        <span className=\"infostaked\">Total Contract Balance</span>\n                        <span className=\"infostakedvalue\">{contractBalance}</span>\n                    </div>\n                </div>\n            </div>\n        </div >\n    );\n}\n\nexport default Info;\n","import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport {\n    contractAddress,\n    abi,\n    tokenAddres,\n    tokenAbi,\n    refDefaultAddress\n} from \"../../../utils/constant\";\nimport './banner.css';\nimport { toast } from 'react-toastify';\n\n// import logo from \"../../asset/images/logo.png\";\nimport logo from \"../../../asset/images/logo.png\";\nimport menuIcon from \"../../../asset/images/menuIcon.png\";\nimport { Container } from \"react-bootstrap\";\nfunction Banner() {\n\n    let accountAd;\n    const [account, setAccount] = useState(\"Connect\");\n    const [upline, setUpline] = useState(refDefaultAddress);\n\n    const [dailyProfit1, set1dailyProfit] = useState(30);\n    const [totalReturn1, set1TotalReturn] = useState(100);\n    const [withdrawn1, set1withdrawn] = useState(0);\n    const [withdrawnAble1, set1withdrawAble] = useState(0);\n    const [enterAmount1, set1EnterAmount] = useState(0);\n    const [fourteenDaysReward1, set1fourteenDaysReward] = useState(0);\n    const [days1, set1days] = useState(15);\n\n    const [dailyProfit2, set2dailyProfit] = useState(36);\n    const [totalReturn2, set2TotalReturn] = useState(100);\n    const [withdrawn2, set2withdrawn] = useState(0);\n    const [withdrawnAble2, set2withdrawAble] = useState(0);\n    const [enterAmount2, set2EnterAmount] = useState(0);\n    const [fourteenDaysReward2, set2fourteenDaysReward] = useState(0);\n    const [days2, set2days] = useState(30);\n\n    const [dailyProfit3, set3dailyProfit] = useState(48);\n    const [totalReturn3, set3TotalReturn] = useState(100);\n    const [withdrawn3, set3withdrawn] = useState(0);\n    const [withdrawnAble3, set3withdrawAble] = useState(0);\n    const [enterAmount3, set3EnterAmount] = useState(0);\n    const [fourteenDaysReward3, set3fourteenDaysReward] = useState(0);\n    const [days3, set3days] = useState(60);\n\n    const getData = async () => {\n        try {\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            // console.log(\"data\", web3);\n            let users = await contract.methods.Users(accountAd).call();\n            // console.log(\"users\", users);\n            // console.log(\"users\", users.lockableDays);\n            if (users.lockableDays == days1) {\n                // console.log(\"users\", days1);\n                let dailyprofit1 = await contract.methods.allocation(days1).call();\n                let daily = dailyprofit1 / 365;\n                let treturn = daily * days1;\n                set1TotalReturn(treturn);\n                // set1withdrawAble(users.WithdrawAbleReward);\n                // set1withdrawAble(users.totalreward);\n                set1withdrawn(users.WithdrawReward);\n                set1dailyProfit(daily);\n\n            } else if (users.lockableDays == days2) {\n                // console.log(\"users\", days2);\n                let dailyprofit2 = await contract.methods.allocation(days2).call();\n                let daily = dailyprofit2 / 365;\n                let treturn = daily * days2;\n                set2TotalReturn(treturn);\n                set2withdrawn(users.WithdrawReward);\n                // set2withdrawAble(users.totalreward);\n                set2dailyProfit(daily);\n\n            } else if (users.lockableDays == days3) {\n                // console.log(\"users\", days3);\n                let dailyprofit3 = await contract.methods.allocation(days3).call();\n                let daily = dailyprofit3 / 365;\n                let treturn = daily * days3;\n                set3TotalReturn(treturn);\n                set3withdrawn(users.WithdrawReward);\n                // set3withdrawAble(users.totalreward);\n                set3dailyProfit(daily);\n            }\n            // set3withdrawAble\n\n        } catch (error) {\n            console.log(\"Error while checking locked account\", error);\n        }\n    };\n\n    const Deposite = async (e) => {\n        try {\n            console.log(\"upline\", upline)\n            console.log(\"deposite\", e.target.name)\n            const name = e.target.name;\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            let tokenContract = new web3.eth.Contract(tokenAbi, tokenAddres);\n            let checkuser = await contract.methods._chakUpline(upline).call();\n            if (checkuser) {\n                if (name === 'planone') {\n                    if (enterAmount1 >= 100) {\n                        await tokenContract.methods.approve(contractAddress, web3.utils.toWei(\"\" + enterAmount1))\n                            .send({\n                                from: account\n                            })\n                            .then(async (output) => {\n                                // toast.success(\"Transaction Completed\");\n                                let dailyprofit1 = await contract.methods.Deposite(web3.utils.toWei(\"\" + enterAmount1), days1, upline)\n                                    .send({\n                                        from: account\n                                    })\n                                    .then(async (output) => {\n                                        toast.success(\"Transaction Completed\");\n                                    }).catch((e) => {\n                                        console.log(\"response\", e);\n                                        toast.error(e.message);\n                                    });\n                            }).catch((e) => {\n                                console.log(\"response\", e);\n                                toast.error(e.message);\n                            });\n                    } else {\n                        toast(\"Minimum amount is 100 SMS\")\n                    }\n\n                } else if (name === 'plantwo') {\n                    if (enterAmount2 >= 100) {\n                        await tokenContract.methods.approve(contractAddress, web3.utils.toWei(\"\" + enterAmount2))\n                            .send({\n                                from: account\n                            })\n                            .then(async (output) => {\n                                let dailyprofit2 = await contract.methods.Deposite(web3.utils.toWei(\"\" + enterAmount2), days2, upline)\n                                    .send({\n                                        from: account\n                                    })\n                                    .then(async (output) => {\n                                        toast.success(\"Transaction Completed\");\n                                    }).catch((e) => {\n                                        console.log(\"response\", e);\n                                        toast.error(e.message);\n                                    });\n                            }).catch((e) => {\n                                console.log(\"response\", e);\n                                toast.error(e.message);\n                            });\n                    } else {\n                        toast(\"Minimum amount is 100 SMS\")\n                    }\n                }\n                else if (name === 'planthree') {\n                    if (enterAmount3 >= 100) {\n                        await tokenContract.methods.approve(contractAddress, web3.utils.toWei(\"\" + enterAmount1))\n                            .send({\n                                from: account\n                            })\n                            .then(async (output) => {\n                                let dailyprofit3 = await contract.methods.Deposite(web3.utils.toWei(\"\" + enterAmount3), days3, upline)\n                                    .send({\n                                        from: account\n                                    })\n                                    .then(async (output) => {\n                                        toast.success(\"Transaction Completed\");\n                                    }).catch((e) => {\n                                        console.log(\"response\", e);\n                                        toast.error(e.message);\n                                    });\n                            }).catch((e) => {\n                                console.log(\"response\", e);\n                                // toast.error(e.message);\n                            });\n                    } else {\n                        toast(\"Minimum amount is 100 SMS\")\n                    }\n                }\n            } else {\n                toast(\"Refferal Address is not Correct\");\n                console.log(\"Refferal Address is not Correct\");\n            }\n        } catch (error) {\n            console.log(\"response\", error);\n            toast.error(\"Error while checking locked account\");\n            // alert(\"Error while checking locked account\");\n        }\n    };\n\n    const unstake = async () => {\n        try {\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            // console.log(\"withrawableDepositeAmount\", accountAd, account);\n            let users = await contract.methods.Users(account).call();\n\n            // console.log(\"withrawableDepositeAmount\", users);\n\n\n            if (users.withrawableDepositeAmount > 0) {\n                if (users.WithdrawAbleReward <= 0) {\n                    let dailyprofit1 = await contract.methods.Withdraw_Staking_Amount()\n                        .send({\n                            from: account\n                        })\n                        .then(async (output) => {\n                            toast.success(\"Transaction Completed\");\n                        }).catch((e) => {\n                            console.log(\"response\", e);\n                            toast.error(e.message);\n                        });\n                } else {\n                    console.log(\"response\");\n                    toast(\"withdraw reward first\");\n                }\n            } else {\n                toast(\"No Claim available\");\n            }\n        } catch (error) {\n            console.log(\"response\", error);\n            // alert(\"Error while checking locked account\");\n        }\n    };\n    const checkReward = async (e) => {\n        try {\n            console.log(\"deposite\", e.target.name)\n            const name = e.target.name;\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            // if (name === 'planone') {\n            let rewards = await contract.methods.Rewards()\n                .send({\n                    from: account\n                })\n                .then(async (output) => {\n                    toast.success(\"Transaction Completed\");\n                }).catch((e) => {\n                    console.log(\"response\", e);\n                    toast.error(e.message);\n                });\n            // } \n        } catch (error) {\n            console.log(\"response\", error);\n            // alert(\"Error while checking locked account\");\n        }\n    };\n\n    const enter1AmountCall = async (e) => {\n        try {\n            const name = e.target.name;\n            // console.log(\"name\", name);\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n\n            if (name === 'first_input') {\n                set1EnterAmount(e.target.value);\n                let check_reward = await contract.methods.check_reward(days1, web3.utils.toWei(e.target.value)).call();\n                set1withdrawAble(formatThousands(web3.utils.fromWei(check_reward)));\n            } else if (name === 'second_input') {\n                set2EnterAmount(e.target.value);\n                let check_reward = await contract.methods.check_reward(days2, web3.utils.toWei(e.target.value)).call();\n                set2withdrawAble(formatThousands(web3.utils.fromWei(check_reward)));\n            } else if (name === 'third_input') {\n                set3EnterAmount(e.target.value);\n                let check_reward = await contract.methods.check_reward(days3, web3.utils.toWei(e.target.value)).call();\n                set3withdrawAble(formatThousands(web3.utils.fromWei(check_reward)));\n            }\n        } catch (error) {\n            console.log(\"Error while checking locked account\", error);\n        }\n    };\n\n    function formatThousands(num) {\n        var numbr = parseFloat(parseFloat(num).toFixed(2));\n        // console.log(\"num\", parseFloat(numbr));\n        var values = numbr.toString().split(\".\");\n        return (\n            values[0].replace(/.(?=(?:.{3})+$)/g, \"$&,\") +\n            (values.length == 2 ? \".\" + values[1] : \"\")\n        );\n    }\n\n    const loadWeb3 = async () => {\n        let isConnected = false;\n        try {\n            if (window.ethereum) {\n                window.web3 = new Web3(window.ethereum);\n                await window.ethereum.enable();\n                isConnected = true;\n            } else if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n                isConnected = true;\n            } else {\n                isConnected = false;\n                console.log(\"Metamask is not installed, please install it on your browser to connect.\");\n                // alert(\"Metamask is not installed, please install it on your browser to connect.\");\n            }\n            if (isConnected === true) {\n                let accounts = await getAccounts();\n                // setAccount(accounts[0]);\n                accountAd = accounts[0];\n                setAccount(accountAd);\n                let accountDetails = null;\n                window.ethereum.on(\"accountsChanged\", function (accounts) {\n                    // setAccount(accounts[0]);\n                    accountAd = accounts[0];\n                    setAccount(accountAd);\n                    // console.log(accounts);\n                });\n            }\n            getData();\n        } catch (error) {\n            console.log(\"Error while connecting metamask\", error);\n            // alert(\"Error while connecting metamask\");\n        }\n    };\n\n    const getAccounts = async () => {\n        const web3 = window.web3;\n        try {\n            let accounts = await web3.eth.getAccounts();\n            // console.log(accounts);\n            return accounts;\n        } catch (error) {\n            console.log(\"Error while fetching acounts: \", error);\n            return null;\n        }\n    };\n\n    // eslint-disable-next-line\n    const isLockedAccount = async () => {\n        try {\n            let accounts = await getAccounts();\n            if (accounts.length > 0) {\n                // console.log(\"Metamask is unlocked\");\n            } else {\n                console.log(\"Metamask is locked\");\n            }\n        } catch (error) {\n            console.log(\"Error while checking locked account\");\n        }\n    };\n\n    useEffect(() => {\n        setInterval(() => {\n            loadWeb3();\n        }, 1000);\n    }, []);\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-4\">\n                        <div className=\"bannercard\">\n                            <div className=\"col-md-12\" id=\"plan\">\n                                <span>Plan A</span>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Daily Profit</span>\n                                    <span className=\"bannervalue\">{dailyProfit1}%</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Total Return</span>\n                                    <span className=\"bannervalue\">{totalReturn1}</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Withdraw time</span>\n                                    <span className=\"bannervalue\">{withdrawn1}</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Days</span>\n                                    <span className=\"bannervalue\">{days1}</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Enter Amount</span>\n                                    {/* <span className=\"bannervalue\">0%</span> */}\n\n                                    <input className=\"stakeinput\"\n                                        placeholder=\"0\"\n                                        name=\"first_input\"\n                                        type=\"number\"\n                                        onChange={enter1AmountCall} />\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">In 14 days you will get</span>\n                                    <span className=\"bannervalue1 py-2\">{withdrawnAble1}</span>\n                                </div>\n                            </div>\n                            {/* <div class=\"d-grid gap-2\"> */}\n                            {/* <div className=\"row\">\n                                <div className=\"col-sm\">\n                                    <button type=\"button\" className=\"btn btn-grad1\" id=\"ImageColor\"\n                                        name=\"planone\"\n                                        onClick={Deposite}>\n                                        Stake HUTT\n                                    </button>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <button type=\"button\" className=\"btn btn-grad1\" id=\"ImageColor\"\n                                        // name=\"planone\"\n                                        onClick={unstake}>\n                                        Claim HUTT\n                                    </button>\n                                </div>\n                            </div> */}\n                            <div class=\"d-grid gap-2\">\n                                <button type=\"button\" className=\"btn btn-gradd1 btn-block\"\n                                    // name=\"planone\"\n                                    onClick={checkReward}>\n                                    STAKE HUTT\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                        <div className=\"bannercard\">\n                            <div className=\"col-md-12\" id=\"plan\">\n                                <span>Plan B</span>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Daily Profit</span>\n                                    <span className=\"bannervalue\">{dailyProfit2}%</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Total Return</span>\n                                    <span className=\"bannervalue\">{totalReturn2}</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Withdrawn Time</span>\n                                    <span className=\"bannervalue\">{withdrawn2}</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Days</span>\n                                    <span className=\"bannervalue\">{days2}</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Enter Amount</span>\n                                    {/* <span className=\"bannervalue\">0%</span> */}\n\n                                    <input className=\"stakeinput\"\n                                        placeholder=\"0\"\n                                        name=\"second_input\"\n                                        type=\"number\"\n                                        onChange={enter1AmountCall}\n                                    />\n\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">In 21 days you will get</span>\n                                    <span className=\"bannervalue1 py-2\">{withdrawnAble2}</span>\n                                </div>\n                            </div>\n                            {/* <div className=\"row\">\n                                <div className=\"col-sm\">\n                                    <button type=\"button\" className=\"btn btn-grad1\" id=\"ImageColor\"\n                                        name=\"plantwo\"\n                                        onClick={Deposite}>\n                                        Stake HUTT\n                                    </button>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <button type=\"button\" className=\"btn btn-grad1\" id=\"ImageColor\"\n                                        name=\"plantwo\"\n                                        onClick={unstake}>\n                                        Claim HUTT\n                                    </button>\n                                </div>\n                            </div> */}\n\n                            <div class=\"d-grid gap-2\">\n                                <button type=\"button\" className=\"btn btn-gradd1 btn-block\"\n                                    // name=\"plantwo\"\n                                    onClick={checkReward}>\n                                    STAKE HUTT\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                        <div className=\"bannercard\">\n                            <div className=\"col-md-12\" id=\"plan\">\n                                <span>Plan C</span>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Daily Profit</span>\n                                    <span className=\"bannervalue\">{dailyProfit3}%</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Total Return</span>\n                                    <span className=\"bannervalue\">{totalReturn3}</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Withdrawn Time</span>\n                                    <span className=\"bannervalue\">{withdrawn3}</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Days</span>\n                                    <span className=\"bannervalue\">{days3}</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">Enter Amount</span>\n\n                                    <input className=\"stakeinput\"\n                                        placeholder=\"0\"\n                                        name=\"third_input\"\n                                        type=\"number\"\n                                        onChange={enter1AmountCall}\n                                    />\n\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerprofit\">In 28 days you will get</span>\n                                    <span className=\"bannervalue1 py-2\">{withdrawnAble3}</span>\n                                </div>\n                            </div>\n                            {/* <div className=\"row\">\n                                <div className=\"col-sm\">\n                                    <button type=\"button\" className=\"btn btn-grad1\" id=\"ImageColor\"\n                                        name=\"planthree\"\n                                        onClick={Deposite}>\n                                        Stake HUTT\n                                    </button>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <button type=\"button\" className=\"btn btn-grad1\" id=\"ImageColor\"\n                                        // name=\"planthree\"\n                                        onClick={unstake}>\n                                        Claim HUTT\n                                    </button>\n                                </div>\n                            </div> */}\n                            <div class=\"d-grid gap-2\">\n                                <button type=\"button\" className=\"btn btn-gradd1 btn-block\"\n                                    // name=\"planthree\"\n                                    onClick={checkReward}>\n                                    STAKE HUTT\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div >\n    );\n}\n\nexport default Banner;\n","import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport {\n    contractAddress,\n    abi,\n    tokenAddres,\n    tokenAbi, refDefaultAddress\n} from \"../../../utils/constant\";\nimport './bannerendplan.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\n// import logo from \"../../asset/images/logo.png\";\nimport logo from \"../../../asset/images/logo.png\";\nimport menuIcon from \"../../../asset/images/menuIcon.png\";\nimport { Container } from \"react-bootstrap\";\nfunction BannerEndPlan() {\n\n    let accountAd;\n    const [account, setAccount] = useState(\"Connect\");\n    const [upline, setUpline] = useState(refDefaultAddress);\n\n    const [dailyProfit1, set1dailyProfit] = useState(60);\n    const [totalReturn1, set1TotalReturn] = useState(100);\n    const [withdrawn1, set1withdrawn] = useState(0);\n    const [withdrawnAble1, set1withdrawAble] = useState(0);\n    const [enterAmount1, set1EnterAmount] = useState(0);\n    const [fourteenDaysReward1, set1fourteenDaysReward] = useState(0);\n    const [days1, set1days] = useState(120);\n\n    const [dailyProfit2, set2dailyProfit] = useState(72);\n    const [totalReturn2, set2TotalReturn] = useState(100);\n    const [withdrawn2, set2withdrawn] = useState(0);\n    const [withdrawnAble2, set2withdrawAble] = useState(0);\n    const [enterAmount2, set2EnterAmount] = useState(0);\n    const [fourteenDaysReward2, set2fourteenDaysReward] = useState(0);\n    const [days2, set2days] = useState(240);\n\n    const [dailyProfit3, set3dailyProfit] = useState(96);\n    const [totalReturn3, set3TotalReturn] = useState(100);\n    const [withdrawn3, set3withdrawn] = useState(0);\n    const [withdrawnAble3, set3withdrawAble] = useState(0);\n    const [enterAmount3, set3EnterAmount] = useState(0);\n    const [fourteenDaysReward3, set3fourteenDaysReward] = useState(0);\n    const [days3, set3days] = useState(365);\n\n    const getData = async () => {\n        try {\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            // console.log(\"data\", web3);\n            let users = await contract.methods.Users(accountAd).call();\n            // console.log(\"users\", users);\n            // console.log(\"users\", users.lockableDays);\n            if (users.lockableDays == days1) {\n                // console.log(\"users\", days1);\n                let dailyprofit1 = await contract.methods.allocation(days1).call();\n                let daily = dailyprofit1 / 365;\n                let treturn = daily * days1;\n                set3TotalReturn(treturn);\n                // set1withdrawAble(users.WithdrawAbleReward);\n                set1withdrawn(users.WithdrawReward);\n                set1dailyProfit(daily);\n\n            } else if (users.lockableDays == days2) {\n                // console.log(\"users\", days2);\n                let dailyprofit2 = await contract.methods.allocation(days2).call();\n                let daily = dailyprofit2 / 365;\n                let treturn = daily * days2;\n                set3TotalReturn(treturn);\n                set2withdrawn(users.WithdrawReward);\n                // set2withdrawAble(users.WithdrawAbleReward);\n                set2dailyProfit(daily);\n\n            } else if (users.lockableDays == days3) {\n                // console.log(\"users\", days3);\n                let dailyprofit3 = await contract.methods.allocation(days3).call();\n                let daily = dailyprofit3 / 365;\n                let treturn = daily * days3;\n                set3TotalReturn(treturn);\n                set3withdrawn(users.WithdrawReward);\n                // set3withdrawAble(users.WithdrawAbleReward);\n                set3dailyProfit(daily);\n            }\n            // set3withdrawAble\n\n        } catch (error) {\n            console.log(\"Error while checking locked account\", error);\n        }\n    };\n\n    const Deposite = async (e) => {\n        try {\n            console.log(\"deposite\", e.target.name)\n            const name = e.target.name;\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            let tokenContract = new web3.eth.Contract(tokenAbi, tokenAddres);\n            let checkuser = await contract.methods._chakUpline(upline).call();\n            if (checkuser) {\n                // console.log(\"enterAmount\", enterAmount1, enterAmount2, enterAmount3, e.target.name)\n                if (name === 'planone') {\n                    if (enterAmount1 >= 100) {\n                        await tokenContract.methods.approve(contractAddress, web3.utils.toWei(enterAmount1))\n                            .send({\n                                from: account\n                            })\n                            .then(async (output) => {\n                                let dailyprofit1 = await contract.methods.Deposite(web3.utils.toWei(enterAmount1), days1, upline)\n                                    .send({\n                                        from: account\n                                    })\n                                    .then(async (output) => {\n                                        toast.success(\"Transaction Completed\");\n                                    }).catch((e) => {\n                                        console.log(\"response\", e);\n                                        toast.error(e.message);\n                                    });\n                            }).catch((e) => {\n                                console.log(\"response\", e);\n                                toast.error(e.message);\n                            });\n                    } else {\n                        toast(\"Minimum amount is 100 SMS\")\n                    }\n                } else if (name === 'plantwo') {\n                    if (enterAmount2 >= 100) {\n                        await tokenContract.methods.approve(contractAddress, web3.utils.toWei(\"\" + enterAmount2))\n                            .send({\n                                from: account\n                            })\n                            .then(async (output) => {\n                                let dailyprofit2 = await contract.methods.Deposite(web3.utils.toWei(\"\" + enterAmount2), days2, upline)\n                                    .send({\n                                        from: account\n                                    })\n                                    .then(async (output) => {\n                                        toast.success(\"Transaction Completed\");\n                                    }).catch((e) => {\n                                        console.log(\"response\", e);\n                                        toast.error(e.message);\n                                    });\n                            }).catch((e) => {\n                                console.log(\"response\", e);\n                                toast.error(e.message);\n                            });\n\n                    } else {\n                        toast(\"Minimum amount is 100 SMS\")\n                    }\n                }\n                else if (name === 'planthree') {\n                    if (enterAmount3 >= 100) {\n                        await tokenContract.methods.approve(contractAddress, web3.utils.toWei(\"\" + enterAmount3))\n                            .send({\n                                from: account\n                            })\n                            .then(async (output) => {\n                                let dailyprofit3 = await contract.methods.Deposite(web3.utils.toWei(\"\" + enterAmount3), days3, upline)\n                                    .send({\n                                        from: account\n                                    })\n                                    .then(async (output) => {\n                                        toast.success(\"Transaction Completed\");\n                                    }).catch((e) => {\n                                        console.log(\"response\", e);\n                                        toast.error(e.message);\n                                    });\n                            }).catch((e) => {\n                                console.log(\"response\", e);\n                                toast.error(e.message);\n                            });\n                    } else {\n                        toast(\"Minimum amount is 100 SMS\")\n                    }\n                }\n            }\n            else {\n                toast(\"Refferal Address is not Correct\");\n                console.log(\"Refferal Address is not Correct\");\n            }\n        } catch (error) {\n            console.log(\"response\", error);\n            // alert(\"Error while checking locked account\");\n        }\n    };\n    const unstake = async () => {\n        try {\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            // console.log(\"withrawableDepositeAmount\", accountAd, account);\n            let users = await contract.methods.Users(account).call();\n\n            // console.log(\"withrawableDepositeAmount\", users);\n\n            if (users.withrawableDepositeAmount > 0) {\n                if (users.WithdrawAbleReward <= 0) {\n                    let dailyprofit1 = await contract.methods.Withdraw_Staking_Amount()\n                        .send({\n                            from: account\n                        })\n                        .then(async (output) => {\n                            toast.success(\"Transaction Completed\");\n                        }).catch((e) => {\n                            console.log(\"response\", e);\n                            toast.error(e.message);\n                        });\n                } else {\n                    toast(\"withdraw reward first\");\n                }\n            } else {\n                toast(\"No Claim available\");\n            }\n        } catch (error) {\n            console.log(\"response\", error);\n            // alert(\"Error while checking locked account\");\n        }\n    };\n    const checkReward = async (e) => {\n        try {\n            console.log(\"deposite\", e.target.name)\n            const name = e.target.name;\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            // if (name === 'planone') {\n            let rewards = await contract.methods.Rewards()\n                .send({\n                    from: account\n                })\n                .then(async (output) => {\n                    toast.success(\"Transaction Completed\");\n                }).catch((e) => {\n                    console.log(\"response\", e);\n                    toast.error(e.message);\n                });\n            // } \n        } catch (error) {\n            console.log(\"response\", error);\n            // alert(\"Error while checking locked account\");\n        }\n    };\n\n    const enter1AmountCall = async (e) => {\n        try {\n            const name = e.target.name;\n            // console.log(\"name\", name);\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n\n            if (name === 'first_input') {\n                set1EnterAmount(e.target.value);\n                let check_reward = await contract.methods.check_reward(days1, web3.utils.toWei(e.target.value)).call();\n                set1withdrawAble(formatThousands(web3.utils.fromWei(check_reward)));\n            } else if (name === 'second_input') {\n                set2EnterAmount(e.target.value);\n                let check_reward = await contract.methods.check_reward(days2, web3.utils.toWei(e.target.value)).call();\n                set2withdrawAble(formatThousands(web3.utils.fromWei(check_reward)));\n            } else if (name === 'third_input') {\n                set3EnterAmount(e.target.value);\n                let check_reward = await contract.methods.check_reward(days3, web3.utils.toWei(e.target.value)).call();\n                set3withdrawAble(formatThousands(web3.utils.fromWei(check_reward)));\n            }\n        } catch (error) {\n            console.log(\"Error while checking locked account\", error);\n        }\n    };\n    function formatThousands(num) {\n        var numbr = parseFloat(parseFloat(num).toFixed(2));\n        // console.log(\"num\", parseFloat(numbr));\n        var values = numbr.toString().split(\".\");\n        return (\n            values[0].replace(/.(?=(?:.{3})+$)/g, \"$&,\") +\n            (values.length == 2 ? \".\" + values[1] : \"\")\n        );\n    }\n\n    const loadWeb3 = async () => {\n        let isConnected = false;\n        try {\n            if (window.ethereum) {\n                window.web3 = new Web3(window.ethereum);\n                await window.ethereum.enable();\n                isConnected = true;\n            } else if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n                isConnected = true;\n            } else {\n                isConnected = false;\n                console.log(\"Metamask is not installed, please install it on your browser to connect.\");\n                // alert(\"Metamask is not installed, please install it on your browser to connect.\");\n            }\n            if (isConnected === true) {\n                let accounts = await getAccounts();\n                // setAccount(accounts[0]);\n                accountAd = accounts[0];\n                setAccount(accountAd);\n                let accountDetails = null;\n                window.ethereum.on(\"accountsChanged\", function (accounts) {\n                    // setAccount(accounts[0]);\n                    accountAd = accounts[0];\n                    setAccount(accountAd);\n                    // console.log(accounts);\n                });\n            }\n            getData();\n        } catch (error) {\n            console.log(\"Error while connecting metamask\", error);\n            // alert(\"Error while connecting metamask\");\n        }\n    };\n\n\n    const getAccounts = async () => {\n        const web3 = window.web3;\n        try {\n            let accounts = await web3.eth.getAccounts();\n            // console.log(accounts);\n            return accounts;\n        } catch (error) {\n            console.log(\"Error while fetching acounts: \", error);\n            return null;\n        }\n    };\n\n    // eslint-disable-next-line\n    const isLockedAccount = async () => {\n        try {\n            let accounts = await getAccounts();\n            if (accounts.length > 0) {\n                // console.log(\"Metamask is unlocked\");\n            } else {\n                console.log(\"Metamask is locked\");\n            }\n        } catch (error) {\n            // alert(\"Error while checking locked account\");\n        }\n    };\n\n    useEffect(() => {\n        setInterval(() => {\n            loadWeb3();\n        }, 1500);\n    }, []);\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-4\">\n                        <div className=\"bannerendcard\">\n                            <div className=\"col-md-12\" id=\"plan1\">\n                                <span>Plan D</span>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Daily Profit</span>\n                                    <span className=\"bannerendvalue\">{dailyProfit1}%</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Total Return12</span>\n                                    <span className=\"bannerendvalue\">{totalReturn1}</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Withdraw time</span>\n                                    <span className=\"bannerendvalue\">{withdrawn1}</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Days</span>\n                                    <span className=\"bannerendvalue\">{days1}</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Enter Amount</span>\n                                    {/* <span className=\"bannerendvalue\">0%</span> */}\n                                    <input\n                                        name=\"first_input\"\n                                        className=\"stakeinput form-control mx-3\" placeholder=\"0\" type=\"Number\"\n                                        onChange={enter1AmountCall}\n                                    />\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">In 14 days you will get</span>\n                                    <span className=\"bannerendvalue1 py-2\">{withdrawnAble1}</span>\n                                </div>\n                            </div>\n                            <div class=\"d-grid gap-2\">\n                                {/* <div className=\"row\">\n                                    <div className=\"col-sm\">\n                                        <button type=\"button\" className=\"btn btn-grad1\" id=\"ImageColor\"\n                                            name=\"planone\"\n                                            onClick={Deposite}>\n                                            Stake SMS\n                                        </button>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <button type=\"button\" className=\"btn btn-grad1\" id=\"ImageColor\"\n                                            name=\"planone\"\n                                            onClick={unstake}>\n                                            Claim SMS\n                                        </button>\n                                    </div>\n                                </div> */}\n                                <button type=\"button\" className=\"btn btn-gradd1 btn-block\"\n                                    // name=\"planone\"\n                                    onClick={checkReward}>\n                                    STAKE HUTT\n                                </button>\n                                {/* <span className=\"bannerendnote\">* plan use capitalization of interest</span> */}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                        <div className=\"bannerendcard\">\n                            <div className=\"col-md-12\" id=\"plan1\">\n                                <span>Plan E</span>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Daily Profit</span>\n                                    <span className=\"bannerendvalue\">{dailyProfit2}%</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Total Return</span>\n                                    <span className=\"bannerendvalue\">{totalReturn2}</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Withdrawn time</span>\n                                    <span className=\"bannerendvalue\">{withdrawn2}</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Days</span>\n                                    <span className=\"bannerendvalue\">{days2}</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Enter Amount</span>\n                                    {/* <span className=\"bannerendvalue\">0%</span> */}\n                                    <input\n                                        name=\"second_input\"\n                                        className=\"stakeinput form-control mx-3\" placeholder=\"0\" type=\"Number\"\n                                        onChange={enter1AmountCall}\n                                    />\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">In 21 days you will get</span>\n                                    <span className=\"bannerendvalue1 py-2\">{withdrawnAble2}</span>\n                                </div>\n                            </div>\n                            <div class=\"d-grid gap-2\">\n                                {/* <div className=\"row\">\n                                    <div className=\"col-sm\">\n                                        <button type=\"button\" className=\"btn btn-grad1\" id=\"ImageColor\"\n                                            name=\"plantwo\"\n                                            onClick={Deposite}>\n                                            Stake SMS\n                                        </button>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <button type=\"button\" className=\"btn btn-grad1\" id=\"ImageColor\"\n                                            // name=\"plantwo\"\n                                            onClick={unstake}>\n                                            Claim SMS\n                                        </button>\n                                    </div>\n                                </div> */}\n                                <button type=\"button\" className=\"btn btn-gradd1 btn-block\"\n                                    // name=\"plantwo\"\n                                    onClick={checkReward}>\n                                    STAKE HUTT\n                                </button>\n                                {/* <span className=\"bannerendnote\">* plan use capitalization of interest</span> */}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                        <div className=\"bannerendcard\">\n                            <div className=\"col-md-12\" id=\"plan1\">\n                                <span>Plan F</span>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Daily Profit</span>\n                                    <span className=\"bannerendvalue\">{dailyProfit3}%</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Total Return</span>\n                                    <span className=\"bannerendvalue\">{totalReturn3}</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Withdrawn time</span>\n                                    <span className=\"bannerendvalue\">{withdrawn3}</span>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Days</span>\n                                    <span className=\"bannerendvalue\">{days3}</span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">Enter Amount</span>\n                                    {/* <span className=\"bannerendvalue\">0%</span> */}\n                                    <input\n                                        name=\"third_input\" className=\"stakeinput btn-secondary form-control  mx-3\" placeholder=\"0\" type=\"Number\"\n                                        onChange={enter1AmountCall}\n                                    />\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"bannerendprofit\">In 28 days you will get</span>\n                                    <span className=\"bannerendvalue1 py-2\">{withdrawnAble3}</span>\n                                </div>\n                            </div>\n                            <div class=\"d-grid gap-2\">\n                                {/* <div className=\"row\">\n                                    <div className=\"col-sm\">\n                                        <button type=\"button\" className=\"btn btn-grad1\" id=\"ImageColor\"\n                                            name=\"planthree\"\n                                            onClick={Deposite}>\n                                            Stake SMS\n                                        </button>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <button type=\"button\" className=\"btn btn-grad1\" id=\"ImageColor\"\n                                            // name=\"planthree\"\n                                            onClick={unstake}>\n                                            Claim SMS\n                                        </button>\n                                    </div>\n                                </div> */}\n                                <button type=\"button\" className=\"btn btn-gradd1 btn-block\"\n                                    // name=\"planthree\"\n                                    onClick={checkReward}>\n                                    STAKE HUTT\n                                </button>\n                                {/* <span className=\"bannerendnote\">* plan use capitalization of interest</span> */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <span className=\"bannerendnwarnings\">\n                        1. Important: Plans return are float and Daily Profit for a new deposit will increase by 0.5% daily\n                    </span>\n                    <span className=\"bannerendnwarnings\">\n                        2. Minimum deposit amount is 0.05 STH and you can have multiple deposits\n                    </span>\n                    <span className=\"bannerendnwarnings\">\n                        3. Earnings every moment, withdraw instantly any time (if you did not use capitalization of interest in Plan 4, Plan 5 and Plan 6)\n                    </span>\n                </div>\n            </div>\n        </div >\n    );\n}\n\nexport default BannerEndPlan;\n","import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport {\n    contractAddress,\n    abi,\n    tokenAddres,\n    tokenAbi\n} from \"../../../utils/constant\";\nimport './myaccount.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\n// import logo from \"../../asset/images/logo.png\";\nimport logo from \"../../../asset/images/logo.png\";\nimport menuIcon from \"../../../asset/images/menuIcon.png\";\nimport { Container } from \"react-bootstrap\";\nfunction Myaccount() {\n\n    let accountAd;\n    const [account, setAccount] = useState(\"Connect\");\n    const [showLinks, setShowLinks] = useState(false);\n    const [dailyProfit, setdailyProfit] = useState(0);\n    const [totalReturn, setTotalReturn] = useState(0);\n    const [withdrawTime, setWithdrawTime] = useState(0);\n    const [enterAmount, setEnterAmount] = useState(0);\n    const [uplineearb, setuplineearn] = useState(0);\n    const [days, setdays] = useState(0);\n    const [WithdrawAbleReward, setWithdrawAbleReward] = useState(0);\n    const [referralReward, SetReferralReward] = useState(0);\n    const [userstaked, setuserstaked] = useState(0);\n    const [numberodreferral, setnumberodreferral] = useState(0)\n\n    const [withdrawamount, setwithdrawamount] = useState(0);\n\n    const getData = async () => {\n        try {\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            // console.log(\"data\", web3);\n            let totalupline = await contract.methods.Total_Upline_Earned().call();\n            setuplineearn(totalupline);\n\n            let uplinereward = await contract.methods.Users(accountAd).call();\n            SetReferralReward(uplinereward.upline_Reward);\n            setWithdrawAbleReward(uplinereward.WithdrawAbleReward);\n            setuserstaked(web3.utils.fromWei(uplinereward.DepositeToken));\n            setnumberodreferral(uplinereward.referrals)\n\n        } catch (error) {\n            console.log(\"Error while checking locked account\", error);\n        }\n    };\n    function formatThousands(num) {\n        var numbr = parseFloat(parseFloat(num).toFixed(6));\n        // console.log(\"num\", parseFloat(numbr));\n        var values = numbr.toString().split(\".\");\n        return (\n            values[0].replace(/.(?=(?:.{3})+$)/g, \"$&,\") +\n            (values.length == 2 ? \".\" + values[1] : \"\")\n        );\n    }\n    const loadWeb3 = async () => {\n        let isConnected = false;\n        try {\n            if (window.ethereum) {\n                window.web3 = new Web3(window.ethereum);\n                await window.ethereum.enable();\n                isConnected = true;\n            } else if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n                isConnected = true;\n            } else {\n                isConnected = false;\n                console.log(\"Metamask is not installed, please install it on your browser to connect.\");\n                // toast(\"Metamask is not installed, please install it on your browser to connect.\");\n            }\n            if (isConnected === true) {\n                let accounts = await getAccounts();\n                // setAccount(accounts[0]);\n                accountAd = accounts[0];\n                setAccount(accountAd);\n                let accountDetails = null;\n                window.ethereum.on(\"accountsChanged\", function (accounts) {\n                    // setAccount(accounts[0]);\n                    accountAd = accounts[0];\n                    setAccount(accountAd);\n                    // console.log(accounts);\n                });\n            }\n            getData();\n        } catch (error) {\n            console.log(\"Error while connecting metamask\", error);\n            // alert(\"Error while connecting metamask\");\n        }\n    };\n    const getAccounts = async () => {\n        const web3 = window.web3;\n        try {\n            let accounts = await web3.eth.getAccounts();\n            // console.log(accounts);\n            return accounts;\n        } catch (error) {\n            console.log(\"Error while fetching acounts: \", error);\n            return null;\n        }\n    };\n    const enterAmountCall = async (e) => {\n        try {\n            setwithdrawamount(e.target.value);\n        } catch (error) {\n            console.log(\"Error while checking locked account\");\n        }\n    };\n    const WithdrawReward = async () => {\n        const web3 = window.web3;\n        try {\n            console.log(\"Called\")\n            const web3 = window.web3;\n            let contract = new web3.eth.Contract(abi, contractAddress);\n            // console.log(\"withdrawamount\", withdrawamount);\n            if (WithdrawAbleReward > 0 && withdrawamount >= 10) {\n                \n                let uplinereward = await contract.methods.WithdrawReward(\n                    web3.utils.toWei(withdrawamount)\n                ).send({\n                    from: account\n                })\n                    .then(async (output) => {\n                        toast.success(\"Transaction Completed\");\n                    }).catch((e) => {\n                        // console.log(\"response\", e);\n                        toast.error(e.message);\n                    });\n            } else {\n                toast(\"You do not Have sufficient balance to withdraw\");\n                // console.log(\"withdrawamount\", \"You do not Have sufficient balance to withdraw\")\n            }\n        } catch (error) {\n            console.log(\"Error while fetching acounts: \", error);\n        }\n    };\n\n\n    // eslint-disable-next-line\n    const isLockedAccount = async () => {\n        try {\n            let accounts = await getAccounts();\n            if (accounts.length > 0) {\n                // console.log(\"Metamask is unlocked\");\n            } else {\n                // console.log(\"Metamask is locked\");\n            }\n        } catch (error) {\n            console.log(\"Error while checking locked account\");\n        }\n    };\n    function copyToClipboard(e) {\n        try {\n            let get = document.getElementById(\"textAreaRef\").select();\n            document.execCommand('copy');\n            e.target.focus();\n            toast.success('copied!');\n        } catch (error) {\n            console.log(\"Error while fetching acounts: \", error);\n        }\n    };\n\n    useEffect(() => {\n        setInterval(() => {\n            loadWeb3();\n        }, 1000);\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-sm-4\">\n                    <div className=\"mystaked\">\n                        <div className=\"row\">\n                            <span className=\"mystakedtext\">Withdrawable Reward </span>\n                            <span className=\"mystakedvalue\">{WithdrawAbleReward}</span>\n                            <span className=\"mystakedtext\">User Total Deposit</span>\n                            <span className=\"mystakedvalue\">{userstaked}</span>\n                            <input className=\"stakeinput\" onChange={enterAmountCall} />\n                            <button className=\"btn btn-primary\"\n                                onClick={WithdrawReward}>\n                                Withdraw\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"row\" style={{ color: \"white\" }}>\n                        <h1>Your Stake</h1>\n                    </div>\n                </div>\n                <div className=\"col-sm-8\">\n                    <div className=\"myrefferaltablee\">\n                        <span className=\"refferaltext\">Your Referral Link</span>\n                        <div className=\"row\">\n                            <div className=\"col-sm-10\">\n                                <input placeholder=\"Please connect to your wallet\"\n                                    value={`${window.location.protocol}//${window.location.host\n                                        }/login?ref=${account}`}\n                                />\n                            </div>\n                            <div className=\"col-sm-2\">\n                                <button className=\"copy\"\n                                    id=\"textAreaRef\"\n                                    onClick={copyToClipboard}\n                                >copy</button>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-4\">\n                                <span className=\"refferaltext\">Total Referral Earned</span>\n                                <span className=\"refferalvalue\">{referralReward}</span>\n                            </div>\n                            <div className=\"col-4\">\n                                <span className=\"refferaltext\">Total Referral Withdrawn</span>\n                                <span className=\"refferalvalue\">0</span>\n                            </div>\n                            <div className=\"col-4\">\n                                <span className=\"refferaltext\">Invited Users by You</span>\n                                <span className=\"refferalvalue\">{numberodreferral}</span>\n                            </div>\n                        </div>\n                        <div className=\"row\" style={{\n                            padding: \"10px 0px\"\n                        }}>\n                            <div className=\"col\">\n                                <p>Earn for promotion BNBstake</p>\n                                <p>You will receive:</p>\n                                <p>5% from each level 1 referral depositss</p>\n                                <p>2.5% from each level 2 referral deposits</p>\n                                <p>0.5% from each level 3 referral deposits</p>\n                                <p>Note! You need to have at least 1 deposit to start receive earnings</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Myaccount;\n","export default __webpack_public_path__ + \"static/media/footer.ca581494.png\";","import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport {\n    contractAddress,\n} from \"../../../utils/constant\";\nimport './sponsor.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\n// import logo from \"../../asset/images/logo.png\";\n// import logo from \"../../asset/images/s1.png\";\n// import logo2 from \"../../asset/images/s2.png\";\n// import logo3 from \"../../asset/images/s3.png\";\n// import logo4 from \"../../asset/images/s4.png\";\nimport footer from './footer.png'\nimport menuIcon from \"../../../asset/images/menuIcon.png\";\nimport { Container } from \"react-bootstrap\";\nfunction Sponsor() {\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h1 className=\"sponsors\">SPONSORS</h1>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm\">\n                        <img className=\"sponsor-image\" src={footer} alt=\"sposor\" />\n                    </div>\n                    {/* <div className=\"col-sm\">\n                        <img src={logo2} alt=\"sposor\" />\n                    </div>\n                    <div className=\"col-sm\">\n                        <img src={logo3} alt=\"sposor\" />\n                    </div>\n                    <div className=\"col-sm\">\n                        <img src={logo4} alt=\"sposor\" />\n                    </div> */}\n                </div>\n            </div>\n        </div >\n    );\n}\n\nexport default Sponsor;\n","import React, { useState, useEffect } from \"react\";\nimport './footer.css';\nimport Pdf from '../../../asset/images/pdf.pdf';\nimport logo1 from '../../../asset/images/staehutt.png';\nfunction Footer\n    () {\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"container\">\n                <div className=\"footer\">\n                    <div className=\"row\">\n                        <div className=\"col-sm\">\n                            <img className=\"logo\" src={logo1} alt=\"Logo\" class={{width: \"75px\", height: \"75px\" }}/>\n                        </div>\n                        <div className=\"col-sm\">\n                            <h6>Powered by</h6>\n                            <a href=\"https://www.binance.org/en/smartChain\"> Binance Smart Chain</a>\n                        </div>\n                        <div className=\"col-sm\">\n                            <h6> Audited by HazeCrypto </h6>\n                            <a href={Pdf} target=\"_blank\"> Download Audit PDF Report </a>\n                        </div>\n                        <div className=\"col-sm\">\n                            <h6> © 2021 All rights reserved. </h6>\n                            <a href=\"#\"> https://sthstake.pro </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div >\n    );\n}\n\nexport default Footer\n    ;\n","\nimport '../App.css';\nimport Navbar from '../components/withoutlocking/navbar/navbar';\nimport Info from '../components/withoutlocking/info/info';\nimport Banner from '../components/withoutlocking/banner/banner';\nimport BannerEndPlan from '../components/withoutlocking/banner2/bannerendplan';\nimport Myaccount from '../components/withoutlocking/myaccount/myaccount';\nimport Sponsor from '../components/withoutlocking/sponsors/sponsor';\nimport Footer from '../components/withoutlocking/footer/footer';\nimport Header from '../components/withoutlocking/header/header';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport { ToastContainer, toast } from 'react-toastify';\nfunction IndexWithout() {\n    return (\n        <div >\n            <ToastContainer />\n            {/* <Navbar /> */}\n            <h3> Without Lockcing </h3>\n            <Info />\n\n            <Banner />\n            <BannerEndPlan />\n            <Myaccount />\n            <Sponsor />\n            <Footer />\n        </div>\n    );\n}\n\nexport default IndexWithout;\n","\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from './components/locking/navbar/navbar';\nimport Sidebar from './components/locking/navbar/sidebars';\nimport { NavigationBar } from './components/locking/navbar/NavigationBar';\n\nimport Index from './contaner/Index';\nimport Home from './contaner/Home';\nimport IndexWithout from './contaner/IndexWithout';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <nav>\n          <ul>\n            <Navbar />\n            {/* <div style={{\n              position: \"fixed\",\n            }} > */}\n            <Sidebar />\n            {/* </div> */}\n            {/* <li>\n              <Link to=\"/\">Home</Link>\n            </li> */}\n            {/* <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/users\">Users</Link>\n            </li> */}\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/without\">\n            <IndexWithout />\n          </Route>\n          <Route path=\"/locking\">\n            <Index />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router >\n  );\n}\n\n// function Home() {\n//   return <h2>Home</h2>;\n// }\n\n// function About() {\n//   return <h2>About</h2>;\n// }\n\n// function Users() {\n//   return <h2>Users</h2>;\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import Navbar from './components/navbar/navbar';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}